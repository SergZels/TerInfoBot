from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher, filters, FSMContext
from aiogram.utils import executor
import requests
import conf
from keyboards.keyboadrs import keyb_main, keyb_foot, keyb_kz, keyboard_prev_next_about,keyboard_prev_next, keyb_organizations
from loguru import logger
from aiogram.utils.executor import start_webhook
from aiogram.contrib.fsm_storage.memory import MemoryStorage

TEST_MODE = True

if conf.VPS:
    TEST_MODE = False

##------------------–ë–ª–æ–∫ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó-----------------##
if TEST_MODE:
    API_Token = conf.API_TOKEN_Test
else:
    API_Token = conf.TOKEN

ADMIN_ID = conf.ADMIN_ID
bot = Bot(token=API_Token)

logger.add("debug.txt")
# webhook settings
WEBHOOK_HOST = conf.WEBHOOK_HOST
WEBHOOK_PATH = conf.WEBHOOK_PATH
WEBHOOK_URL = f"{WEBHOOK_HOST}{WEBHOOK_PATH}"

# webserver settings
WEBAPP_HOST = '0.0.0.0'  # or ip 127.0.0.1
WEBAPP_PORT = 3007
bot = Bot(token=API_Token)
storage = MemoryStorage()
dp = Dispatcher(bot,storage=storage)


def getstring(li :list)->str:
#str = f"<strong>–ù–∞–∑–≤–∞:</strong> {li['Name']}\n<strong>–û–ø–∏—Å:</strong> {li['About']}\n<strong>–ê–¥—Ä–µ—Å–∞:</strong> {li['address']}\n"
    str = f"–ù–∞–∑–≤–∞: {li['Name']}\n–û–ø–∏—Å: {li['About']}\n–ê–¥—Ä–µ—Å–∞: {li['address']}\n"
    if li['tel']!= "":
      #  str+=f"<strong>–¢–µ–ª.:</strong> {li['tel']}\n"
        str += f"–¢–µ–ª.: {li['tel']}\n"
    if li['work_schedule']!="":
        grafik = f"{li['work_schedule']}".split('#')
        tempstr=""
        for i in grafik:
            tempstr+=f"{i}\n"
       # str += f"<strong>–ì—Ä–∞—Ñ—ñ–∫:</strong> {tempstr}"
        str += f"–ì—Ä–∞—Ñ—ñ–∫: {tempstr}"
    if li['email']!="":
        #str += f"<a href='{li['SiteURL']}'>–°–∞–π—Ç</a> "
        str += f"email: {li['email']}\n"
    if li['SiteURL']!="":
        #str += f"<a href='{li['SiteURL']}'>–°–∞–π—Ç</a> "
        str += f"–°–∞–π—Ç: {li['SiteURL']}\n"
    if li['Fa—ÅebookURL']!="":
        str += f"Facebook: {li['Fa—ÅebookURL']}\n"
     #   str += f"<a href='{li['Fa—ÅebookURL']}'>Facebook</a> "
    if li['InstagramURL']!="":
        str += f"Instagram: {li['InstagramURL']}\n"
        #str += f"<a href='{li['InstagramURL']}'>Instagram</a> "

    return str

# @dp.message_handler(content_types=types.ContentType.NEW_CHAT_MEMBERS)
# async def new_chat_members(message: types.Message):
#     for member in message.new_chat_members:
#         if member.is_bot and member.id == bot.id:
#             # –ü—ñ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –±–æ—Ç–∞
#             await bot.send_message(conf.ADMIN_ID,
#                                    f"–ù–æ–≤–µ–Ω—å–∫–∏–π –ø—ñ–¥–ø–∏—Å–∞–≤—Å—è {message.from_user.first_name} - {message.from_user.id}")
#             logger.debug(f"–ù–æ–≤–µ–Ω—å–∫–∏–π –ø—ñ–¥–ø–∏—Å–∞–≤—Å—è {message.from_user.first_name} - {message.from_user.id}")
#
# @dp.message_handler(content_types=types.ContentType.LEFT_CHAT_MEMBER)
# async def left_chat_member(message: types.Message):
#     if message.left_chat_member.is_bot and message.left_chat_member.id == bot.id:
#         # –í—ñ–¥–ø–∏—Å–∞–ª–∏—Å—å –≤—ñ–¥ –±–æ—Ç–∞
#         await bot.send_message(conf.ADMIN_ID,
#                                f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–æ–∫–∏–Ω—É–≤ –±–æ—Ç {message.from_user.first_name} - {message.from_user.id}")
#         logger.debug(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–æ–∫–∏–Ω—É–≤ –±–æ—Ç {message.from_user.first_name} - {message.from_user.id}")


@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    welcomeMessageText = '''–í–∞—Å –≤—ñ—Ç–∞—î –¢–µ—Ä–µ–±–æ–≤–ª—è–Ü–Ω—Ñ–æ–ë–æ—Ç.\n\n–¶–∏—Ñ—Ä–æ–≤–∏–π –ø—Ä–æ–¥—É–∫—Ç —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –≥—Ä–æ–º–∞–¥—Å—å–∫–æ—é –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—î—é –¶–µ–Ω—Ç—Ä —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —Ä–æ–∑–≤–∏—Ç–∫—É –≥—Ä–æ–º–∞–¥–∏.\n\n–ù–∞—à—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏:\nngozzrg@gmail.com\n098 151 0 251\nngozzrg.terebovlia.info\n<a href='https://www.facebook.com/ngozzrg'>Facebook</a>
    '''
    await message.answer(welcomeMessageText, parse_mode="HTML")
    await message.answer('–û–±–µ—Ä—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –∫–∞—Ç–µ–≥–æ—Ä—ñ—éüëá', reply_markup=keyb_main)
    URL = "https://vmi957205.contaboserver.net/terinfobot/ep/us/"
    resp = requests.get(URL, params={'userName': message.from_user.first_name, 'userID': message.from_user.id})


@dp.message_handler(filters.Text(startswith="–ó–∞–∫–ª–∞–¥–∏ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è"))
async def foots(message: types.Message, state: FSMContext):

    await bot.send_photo(chat_id=message.chat.id,
                         photo="https://media.acc.cv.ua/news/article/2020/08/16/62182/TGAyxyaM5Bh1c6pSizF2.w575.jpg",
                         caption="", reply_markup=keyb_foot)

@dp.message_handler(filters.Text(startswith="–ú–∞–≥–∞–∑"))
async def foots(message: types.Message, state: FSMContext):
    keyb = types.InlineKeyboardMarkup()
    but_1 = types.InlineKeyboardButton(text='–ü—Ä–æ–¥—É–∫—Ç–æ–≤—ñ', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ú–∞–≥–ü—Ä–æ–¥—É–∫—Ç–æ–≤—ñ')
    but_2 = types.InlineKeyboardButton(text='–î–∏—Ç—è—á—ñ', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ú–∞–≥–î–∏—Ç—è—á—ñ')
    but_3 = types.InlineKeyboardButton(text='–ì–æ—Å–ø–æ–¥–∞—Ä—Å—å–∫—ñ', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ú–∞–≥–ì–æ—Å–ø–æ–¥–∞—Ä—Å—å–∫—ñ')
    but_4 = types.InlineKeyboardButton(text='–û–¥—è–≥ —Ç–∞ –≤–∑—É—Ç—Ç—è', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ú–∞–≥–û–¥—è–≥–¢–∞–í–∑—É—Ç—Ç—è')
    but_5 = types.InlineKeyboardButton(text='–í–µ—Ç–∏—Ä–∏–Ω–∞—Ä–Ω—ñ', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ú–∞–≥–í–µ—Ç–∏—Ä–∏–Ω–∞—Ä–Ω—ñ')
    but_6 = types.InlineKeyboardButton(text='–ü–æ—Å—É–¥', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ú–∞–≥–ü–æ—Å—É–¥')
    but_7 = types.InlineKeyboardButton(text='–ö–≤—ñ—Ç–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ú–∞–≥–ö–≤—ñ—Ç–∏')
    but_8 = types.InlineKeyboardButton(text='–ì–æ—Å–ø–æ–¥–∞—Ä—Å—å–∫—ñ –º–∞–≥–∞–∑–∏–Ω–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ì–æ—Å–ø–æ–¥–∞—Ä—Å—å–∫—ñ–ú–∞–≥–∞–∑–∏–Ω–∏')
    but_9 = types.InlineKeyboardButton(text='–ö–Ω–∏–≥–∏ —Ç–∞ –∫–∞–Ω—Ü–µ–ª—è—Ä—ñ—è', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ö–∞–Ω—Ü–µ–ª—è—Ä—ñ—è')
    but_10 = types.InlineKeyboardButton(text='–¢–µ–ª–µ—Ñ–æ–Ω–∏ —Ç–∞ –æ—Ä–≥—Ç–µ—Ö–Ω—ñ–∫–∞', callback_data='–∫–æ–º–∞–Ω–¥–∞_–¢–µ–ª–µ—Ñ–æ–Ω–∏–û—Ä–≥—Ç–µ—Ö–Ω—ñ–∫–∞')
    keyb.add(but_1,but_2).add(but_3,but_4).add(but_5,but_6).add(but_7,but_9).add(but_8).add(but_10)
   # await message.answer("–î–∞–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ!",reply_markup=keyb)
    Url = 'https://ceha.com.ua/wp-content/uploads/2016/02/kompleksnoe-reklamnoe-oformlenie-magazinov-supermarketov.jpg'
    await bot.send_photo(chat_id=message.chat.id,photo=Url,caption="", reply_markup=keyb)

@dp.message_handler(filters.Text(startswith="–ö—Ä–∞—Å–∞ —ñ –∑–¥–æ—Ä–æ–≤—è"))
async def foots(message: types.Message, state: FSMContext):

    await bot.send_photo(chat_id=message.chat.id,
                         photo="https://inventure.com.ua/img/thumb.990.660/upload/pic2020-1q/HairSalon-girl-pic.jpg",
                         caption="", reply_markup=keyb_kz)


@dp.message_handler(filters.Text(startswith="–ú–∞–≥–∞–∑–∏–Ω–∏"))
async def foots(message: types.Message):

    await message.answer("–î–∞–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.")

@dp.message_handler(filters.Text(startswith="–ü–æ—Å–ª—É–≥–∏"))
async def foots(message: types.Message, state: FSMContext):
    keyb = types.InlineKeyboardMarkup()
    but_1 = types.InlineKeyboardButton(text='–ê—Ç–µ–ª—å—î‚úÇÔ∏è', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ê—Ç–µ–ª—å—î')
    but_2 = types.InlineKeyboardButton(text='–†–µ–º–æ–Ω—Ç –∞–≤—Ç–æüöó', callback_data='–∫–æ–º–∞–Ω–¥–∞_–†–µ–º–æ–Ω—Ç–ê–≤—Ç–æ')
    but_3 = types.InlineKeyboardButton(text='–†–µ–º–æ–Ω—Ç —Ç–µ—Ö–Ω—ñ–∫–∏ü™õ', callback_data='–∫–æ–º–∞–Ω–¥–∞_–†–µ–º–æ–Ω—Ç–¢–µ—Ö–Ω—ñ–∫–∏')
    but_4 = types.InlineKeyboardButton(text='–ù–æ—Ç–∞—Ä—ñ—É—Å–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ù–æ—Ç–∞—Ä—ñ—É—Å–∏')
    but_5 = types.InlineKeyboardButton(text='–î–∏—Ç—è—á–µ –¥–æ–∑–≤—ñ–ª–ª—è', callback_data='–∫–æ–º–∞–Ω–¥–∞_–î–∏—Ç—è—á–µ–î–æ–∑–≤—ñ–ª–ª—è')
    but_6 = types.InlineKeyboardButton(text='–Ü–Ω—Ç–µ—Ä–Ω–µ—Ç-–ø—Ä–æ–≤–∞–π–¥–µ—Ä–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–Ü–Ω—Ç–µ—Ä–Ω–µ—Ç–ü—Ä–æ–≤–∞–π–¥–µ—Ä–∏')
    but_7 = types.InlineKeyboardButton(text='–ü–æ–ª—ñ–≥—Ä–∞—Ñ—ñ—è —Ç–∞ —Å—Ç—É–¥—ñ—è –¥–∏–∑–∞–π–Ω—É', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ü–æ–ª—ñ–≥—Ä–∞—Ñ—ñ—è–î–∏–∑–∞–π–Ω')
    but_8 = types.InlineKeyboardButton(text='–î–æ—Å—Ç–∞–≤–∫–∞', callback_data='–∫–æ–º–∞–Ω–¥–∞_–î–æ—Å—Ç–∞–≤–∫–∞')
    but_9 = types.InlineKeyboardButton(text='–ó–∞–ø—Ä–∞–≤–∫–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ó–∞–ø—Ä–∞–≤–∫–∏')
    keyb.add(but_1).add(but_2,but_4).add(but_3,but_8).add(but_5).add(but_6,but_9).add(but_7)
   # await message.answer("–î–∞–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ", reply_markup=keyb)
    await bot.send_photo(chat_id=message.chat.id,
                         photo="https://orxid.in.ua/orx/wp-content/uploads/2021/04/20200430_104000-768x576-1.jpg",
                         caption="", reply_markup=keyb)

@dp.message_handler(filters.Text(startswith="–•–æ—á–µ—à –±—É—Ç–∏ —Ç—É—Ç"))
async def foots(message: types.Message, state: FSMContext):
    await message.answer("<a href='https://forms.gle/FNpJdhBPsPcQFc4c9'>–ü–µ—Ä–µ–π—Ç–∏ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º</a> ", reply_markup=keyb_main,parse_mode="HTML")


@dp.message_handler(filters.Text(startswith="–í–ü–û"))
async def foots(message: types.Message, state: FSMContext):
    keyb = types.InlineKeyboardMarkup()
    but_1 = types.InlineKeyboardButton(text='–î–æ—Ä–æ–∂–Ω—è –∫–∞—Ä—Ç–∞ –í–ü–û', callback_data='–∫–æ–º–∞–Ω–¥–∞_–î–æ—Ä–æ–∂–Ω—è–ö–∞—Ä—Ç–∞–í–ü–û')
    but_2 = types.InlineKeyboardButton(text='–ö–æ—Ä–∏—Å–Ω—ñ –ª–æ–∫–∞—Ü—ñ—ó', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ö–æ—Ä–∏—Å–Ω—ñ–õ–æ–∫–∞—Ü—ñ—ó')
    but_3 = types.InlineKeyboardButton(text='–î–æ–ø–æ–º–æ–≥–∞ –≤—ñ–π—Å—å–∫–æ–≤–∏–ºü™ñ', callback_data='–∫–æ–º–∞–Ω–¥–∞_–î–æ–ø–æ–º–æ–≥–∞–í—ñ–π—Å—å–∫–æ–≤–∏–º')
    but_4 = types.InlineKeyboardButton(text='–†–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ–π–Ω—ñ —Ü–µ–Ω—Ç—Ä–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–†–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ–π–Ω—ñ–¶–µ–Ω—Ç—Ä–∏')
    but_5 = types.InlineKeyboardButton(text='–ü—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ü—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–∞–ü—ñ–¥—Ç—Ä–∏–º–∫–∞')
    but_6 = types.InlineKeyboardButton(text='–ü–æ—à—É–∫ —Ä–æ–±–æ—Ç–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ü–æ—à—É–∫–†–æ–±–æ—Ç–∏')
    keyb.add(but_1).add(but_2).add(but_3).add(but_4).add(but_5).add(but_6)
   # await message.answer("–î–∞–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ", reply_markup=keyb)
    url = 'https://upravbud.info/content/uploads/2022/04/016-980x620.png'
    await bot.send_photo(chat_id=message.chat.id, photo=url, caption="", reply_markup=keyb)

@dp.message_handler(filters.Text(startswith="–û—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó"))
async def foots(message: types.Message, state: FSMContext):
    await message.answer("–û–±–µ—Ä—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ–πüëá",reply_markup=keyb_organizations)

@dp.message_handler(filters.Text(startswith="–§—ñ–Ω–∞–Ω—Å–æ–≤—ñ —Ç–∞ –∫—Ä–µ–¥–∏—Ç–Ω—ñ —É—Å—Ç–∞–Ω–æ–≤–∏"))
async def foots(message: types.Message):
    keyb = types.InlineKeyboardMarkup()
    but_1 = types.InlineKeyboardButton(text='–ë–∞–Ω–∫–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ë–∞–Ω–∫–∏')
    but_2 = types.InlineKeyboardButton(text='–ö–∞–∑–Ω–∞—á–µ–π—Å—Ç–≤–æ', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ö–∞–∑–Ω–∞—á–µ–π—Å—Ç–≤–æ')
    but_3 = types.InlineKeyboardButton(text='–ö—Ä–µ–¥–∏—Ç–Ω—ñ —Å–ø—ñ–ª–∫–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ö—Ä–µ–¥–∏—Ç–Ω—ñ–°–ø—ñ–ª–∫–∏')
    keyb.add(but_1).add(but_2).add(but_3)
   # await message.answer("–î–∞–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ",reply_markup=keyb)
    url = 'https://minfin.com.ua/img/2022/85137707/0988d5c75c8fe6ca4b45d900175db854.jpeg'
    await bot.send_photo(chat_id=message.chat.id, photo=url, caption="", reply_markup=keyb)


@dp.message_handler(filters.Text(startswith="–ì—Ä–æ–º–∞–¥—Å—å–∫—ñ —Ç–∞ –±–ª–∞–≥–æ–¥—ñ–π–Ω—ñ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó"))
async def foots(message: types.Message, state: FSMContext):
    keyb = types.InlineKeyboardMarkup()
    but_1 = types.InlineKeyboardButton(text='–ì—Ä–æ–º–∞–¥—Å—å–∫—ñ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—óüè´', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ì—Ä–æ–º–∞–¥—Å—å–∫—ñ_–æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó')
    but_2 = types.InlineKeyboardButton(text='–ë–ª–∞–≥–æ–¥—ñ–π–Ω—ñ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ë–ª–∞–≥–æ–¥—ñ–π–Ω—ñ_–æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó')
    but_3 = types.InlineKeyboardButton(text='–°–ø—ñ–ª–∫–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–°–ø—ñ–ª–∫–∏')
    but_4 = types.InlineKeyboardButton(text='–†–µ–ª—ñ–≥—ñ–π–Ω—ñ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó', callback_data='–∫–æ–º–∞–Ω–¥–∞_–†–µ–ª—ñ–≥—ñ–π–Ω—ñ_–æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó')
    keyb.add(but_1).add(but_2).add(but_3).add(but_4)
   # await message.answer("–î–∞–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ",reply_markup=keyb)
    url = 'https://minfin.com.ua/img/2022/85137707/0988d5c75c8fe6ca4b45d900175db854.jpeg'
    await bot.send_photo(chat_id=message.chat.id, photo=url, caption="", reply_markup=keyb)

@dp.message_handler(filters.Text(startswith="–ú—ñ—Å—å–∫–∞ —Ä–∞–¥–∞"))
async def foots(message: types.Message, state: FSMContext):
    keyb_mr = types.InlineKeyboardMarkup()
    but_1 = types.InlineKeyboardButton(text='–ì–æ–ª–æ–≤–∞ –≥—Ä–æ–º–∞–¥–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ì–æ–ª–æ–≤–∞–ì—Ä–æ–º–∞–¥–∏')
    but_2 = types.InlineKeyboardButton(text='–ó–∞—Å—Ç—É–ø–Ω–∏–∫–∏ –≥–æ–ª–æ–≤–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ó–∞—Å—Ç—É–ø–Ω–∏–∫–∏–ì–æ–ª–æ–≤–∏')
    but_3 = types.InlineKeyboardButton(text='–°—Ç–∞—Ä–æ—Å—Ç–∞—Ç–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–°—Ç–∞—Ä–æ—Å—Ç–∏')
    but_4 = types.InlineKeyboardButton(text='–í—ñ–¥–¥—ñ–ª–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–í—ñ–¥–¥—ñ–ª–∏')
    keyb_mr.add(but_1).add(but_2).add(but_3).add(but_4)
    url = 'https://vmi957205.contaboserver.net/TerInfBotPhoto/%D0%BC%D1%96%D1%81%D1%8C%D0%BA%D0%B0%20%D1%80%D0%B0%D0%B4%D0%B0.jpg'
    await bot.send_photo(chat_id=message.chat.id, photo=url, caption="", reply_markup=keyb_mr)

@dp.message_handler(filters.Text(startswith="–û—Å–≤—ñ—Ç–∞"))
async def foots(message: types.Message, state: FSMContext):
    keyb_os = types.InlineKeyboardMarkup()
    but_1 = types.InlineKeyboardButton(text='–®–∫–æ–ª–∏ –Ü —Å—Ç—É–ø–µ–Ω—ñ–≤', callback_data='–∫–æ–º–∞–Ω–¥–∞_–®–∫–æ–ª–∏–Ü—Å—Ç—É–ø–µ–Ω—ñ–≤')
    but_2 = types.InlineKeyboardButton(text='–®–∫–æ–ª–∏ –Ü–Ü —Å—Ç—É–ø–µ–Ω—ñ–≤', callback_data='–∫–æ–º–∞–Ω–¥–∞_–®–∫–æ–ª–∏–Ü–Ü—Å—Ç—É–ø–µ–Ω—ñ–≤')
    but_3 = types.InlineKeyboardButton(text='–®–∫–æ–ª–∏ –Ü–Ü–Ü —Å—Ç—É–ø–µ–Ω—ñ–≤', callback_data='–∫–æ–º–∞–Ω–¥–∞_–®–∫–æ–ª–∏–Ü–Ü–Ü—Å—Ç—É–ø–µ–Ω—ñ–≤')
    but_4 = types.InlineKeyboardButton(text='–°–∞–¥–æ—á–∫–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–°–∞–¥–æ—á–∫–∏')
    but_5 = types.InlineKeyboardButton(text='–ü–æ–∑–∞—à–∫—ñ–ª—å–Ω–∞ –æ—Å–≤—ñ—Ç–∞', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ü–æ–∑–∞—à–∫—ñ–ª—å–Ω–∞–û—Å–≤—ñ—Ç–∞')
    keyb_os.add(but_4).add(but_1).add(but_2).add(but_3).add(but_5)
   # await message.answer("–î–∞–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ",reply_markup=keyb_os)
    await bot.send_photo(chat_id=message.chat.id,
                         photo="https://images.unian.net/photos/2022_09/thumb_files/400_0_1664111474-8193.jpg?r=616244",
                         caption="", reply_markup=keyb_os)

@dp.message_handler(filters.Text(startswith="–ö—É–ª—å—Ç—É—Ä–∞"))
async def foots(message: types.Message, state: FSMContext):
    keyb = types.InlineKeyboardMarkup()
    but_1 = types.InlineKeyboardButton(text='–¶–ö—ñ–î–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–¶–ö—ñ–î–∏')
    but_2 = types.InlineKeyboardButton(text='–ú—É–∑–µ—ó, —Å–∞–¥–∏–±–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ú—É–∑–µ—ó–°–∞–¥–∏–±–∏')
    but_3 = types.InlineKeyboardButton(text='–ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∏üìö', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∏')
    but_4 = types.InlineKeyboardButton(text='–¢—É—Ä–∏–∑–ºüèñ', callback_data='–∫–æ–º–∞–Ω–¥–∞_–¢—É—Ä–∏–∑–º')
    keyb.add(but_1).add(but_2).add(but_3).add(but_4)
    url = 'https://vmi957205.contaboserver.net/TerInfBotPhoto/%D0%BA%D1%83%D0%BB%D1%8C%D1%82%D1%83%D1%80%D0%B0.jpg'
    await bot.send_photo(chat_id=message.chat.id, photo=url, caption="", reply_markup=keyb)

@dp.message_handler(filters.Text(startswith="–û—Ö–æ—Ä–æ–Ω–∞ –∑–¥–æ—Ä–æ–≤"))
async def foots(message: types.Message, state: FSMContext):
    keyb_oxz = types.InlineKeyboardMarkup()
    but_1= types.InlineKeyboardButton(text='–ö–ù–ü –¢–ú–† "–¢–µ—Ä–µ–±–æ–≤–ª—è–Ω—Å—å–∫–∞ –º—ñ—Å—å–∫–∞ –ª—ñ–∫–∞—Ä–Ω—è"üè•', callback_data='–∫–æ–º–∞–Ω–¥–∞_–º—ñ—Å—å–∫–∞–õ—ñ–∫–∞—Ä–Ω—è')
    but_2 = types.InlineKeyboardButton(text='–°—ñ–º–µ–π–Ω–∞ –º–µ–¥–∏—Ü–∏–Ω–∞üë®‚Äçüë©‚Äçüëß‚Äçüë¶', callback_data='–∫–æ–º–∞–Ω–¥–∞_–°—ñ–º–µ–π–Ω–∞–ú–µ–¥–∏—Ü–∏–Ω–∞')
    but_3 = types.InlineKeyboardButton(text='–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä—ñ—èü¶Æ', callback_data='–∫–æ–º–∞–Ω–¥–∞_–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä—ñ—è')
    but_4 = types.InlineKeyboardButton(text='–ê–ø—Ç–µ–∫–∏üíä', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ê–ø—Ç–µ–∫–∏')
    but_5 = types.InlineKeyboardButton(text='–°—Ç–æ–º–∞—Ç–æ–ª–æ–≥—ñ—ó', callback_data='–∫–æ–º–∞–Ω–¥–∞_–°—Ç–æ–º–∞—Ç–æ–ª–æ–≥—ñ—ó')
    but_6 = types.InlineKeyboardButton(text='–õ–∞–±–æ—Ä–∞—Ç–æ—Ä—ñ—óü©∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–õ–∞–±–æ—Ä–∞—Ç–æ—Ä—ñ—ó')
    keyb_oxz.add(but_2).add(but_1).add(but_3).add(but_4).add(but_5).add(but_6)
    url = 'https://vmi957205.contaboserver.net/TerInfBotPhoto/ox_zd.jpg'
    await bot.send_photo(chat_id=message.chat.id, photo=url, caption="", reply_markup=keyb_oxz)

@dp.message_handler(filters.Text(startswith="–Ü–Ω—à—ñ —É—Å—Ç–∞–Ω–æ–≤–∏"))
async def foots(message: types.Message, state: FSMContext):
    keyb_ii = types.InlineKeyboardMarkup()
    but_1= types.InlineKeyboardButton(text="–ì—Ä–æ–º–∞–¥—Å—å–∫—ñ –æ–±'—î–¥–Ω–∞–Ω–Ω—è", callback_data='–∫–æ–º–∞–Ω–¥–∞_–ì—Ä–æ–º–∞–¥—Å—å–∫—ñ–û–±—î–¥–Ω–∞–Ω–Ω—è')
    but_2 = types.InlineKeyboardButton(text='–¶–µ—Ä–∫–≤–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–¶–µ—Ä–∫–≤–∏')
    but_3 = types.InlineKeyboardButton(text='–Ü–Ω—à—ñ', callback_data='–∫–æ–º–∞–Ω–¥–∞_–Ü–Ω—à—ñ')

    keyb_ii.add(but_1).add(but_2).add(but_3)
    url = 'https://vmi957205.contaboserver.net/TerInfBotPhoto/inshiys.jpg'
    await bot.send_photo(chat_id=message.chat.id, photo=url, caption="", reply_markup=keyb_ii)

@dp.message_handler(filters.Text(startswith="–ñ–∏—Ç–µ–ª—é"))
async def foots(message: types.Message, state: FSMContext):
    keyb_ii = types.InlineKeyboardMarkup()
    but_1= types.InlineKeyboardButton(text='–ï–∫—Å—Ç—Ä–µ–Ω—ñ —Å–ª—É–∂–±–∏üöí', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ï–∫—Å—Ç—Ä–µ–Ω—ñ–°–ª—É–∂–±–∏')
    but_2 = types.InlineKeyboardButton(text="–ó–≤'—è–∑–æ–∫ —ñ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç", callback_data='–∫–æ–º–∞–Ω–¥–∞_–ó–≤—è–∑–æ–∫–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç')
    but_3 = types.InlineKeyboardButton(text='–ö–æ–º—É–Ω–∞–ª—å–Ω—ñ —Å–ª—É–∂–±–∏üöú', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ö–æ–º—É–Ω–∞–ª—å–Ω—ñ–°–ª—É–∂–±–∏')
    but_4 = types.InlineKeyboardButton(text='–î–µ—Ä–∂–∞–≤–Ω—ñ —É—Å—Ç–∞–Ω–æ–≤–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–î–µ—Ä–∂–∞–≤–Ω—ñ–£—Å—Ç–∞–Ω–æ–≤–∏')
    keyb_ii.add(but_1).add(but_2).add(but_3).add(but_4)
    url = 'https://vmi957205.contaboserver.net/TerInfBotPhoto/%D0%B6%D0%B8%D1%82%D0%B5%D0%BB%D1%8E.jpg'
    await bot.send_photo(chat_id=message.chat.id, photo=url, caption="", reply_markup=keyb_ii)



@dp.message_handler(filters.Text(startswith="‚¨ÖÔ∏è –ù–∞ –≥–æ–ª–æ–≤–Ω—É"))
async def foots(message: types.Message, state: FSMContext):
   await message.answer("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é",reply_markup=keyb_main)

@dp.message_handler(filters.Text(startswith="–ü—ñ–¥–ø—Ä–∏—î–º—Å—Ç–≤–∞"))
async def foots(message: types.Message, state: FSMContext):
    await message.answer("–î–∞–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ")

@dp.message_handler(filters.Text(startswith="–í—ñ–π—Å—å–∫–æ–≤–∏–º"))
async def foots(message: types.Message, state: FSMContext):
    await message.answer("–î–∞–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ")

@dp.message_handler()
async def foots(message: types.Message, state: FSMContext):
    if message.text == "–§–∞–π–ª12":
        doc = open('debug.txt', 'rb')
        await message.reply_document(doc)
    else:
        await message.answer("–î–∞–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ. ")

#---------------------------------------------------------------------------------

@dp.callback_query_handler(lambda c: c.data == 'next')
async def change_image_callback(query: types.CallbackQuery, state: FSMContext):

    async with state.proxy() as data:
        data['tmp'] = ""

    try:
        main_list = data['main_list']
        listindex = data['listindex']
    except:
        logger.debug(f"KeyErr in next listindex - {listindex} mainlist -{main_list}")

    if len(main_list) > 1:
        listindex = listindex + 1
        if listindex == len(main_list):
            listindex = 0

        try:
            i = main_list[listindex]
           # res = f"–ù–∞–∑–≤–∞: {i['Name']}\n–û–ø–∏—Å: {i['About']}\n–ê–¥—Ä–µ—Å–∞: {i['address']}\n–¢–µ–ª.: {i['tel']}\n–ì—Ä–∞—Ñ—ñ–∫: {i['work_schedule']}\n–°–∞–π—Ç:{i['SiteURL']}\n{listindex+1} —ñ–∑ {len(main_list)}\n"
            res = f"{getstring(i)}{listindex + 1} —ñ–∑ {len(main_list)}\n"
            await bot.edit_message_media(chat_id=query.message.chat.id, message_id=query.message.message_id,
                                     media=types.InputMediaPhoto(media=i['PhotoURL'], caption=res),
                                     reply_markup=keyboard_prev_next)
            async with state.proxy() as data:
                data['listindex'] = listindex
        except IndexError:
            async with state.proxy() as data:
                data['listindex'] = 0
            print(f"IndexError listindex - {listindex}")
            logger.debug(f"IndexError listindex in next- {listindex} mainlist -{main_list}")


@dp.callback_query_handler(lambda c: c.data == 'prev')
async def change_image_callback(query: types.CallbackQuery, state: FSMContext):

    async with state.proxy() as data:
        data['tmp'] = ""

    try:
        main_list = data['main_list']
        listindex = data['listindex']
    except:
        logger.debug(f"KeyErr in prev listindex - {listindex} mainlist -{main_list}")

    if len(main_list) > 1:
        listindex = listindex - 1
        if listindex == -1:
            listindex = len(main_list)-1

        try:
            i = main_list[listindex]
           # res = f"–ù–∞–∑–≤–∞: {i['Name']}\n–û–ø–∏—Å: {i['About']}\n–ê–¥—Ä–µ—Å–∞: {i['address']}\n–¢–µ–ª.: {i['tel']}\n–ì—Ä–∞—Ñ—ñ–∫: {i['work_schedule']}\n–°–∞–π—Ç:{i['SiteURL']}\n                    {listindex+1} —ñ–∑ {len(main_list)}\n"
            res = f"{getstring(i)}{listindex + 1} —ñ–∑ {len(main_list)}\n"

            await bot.edit_message_media(chat_id=query.message.chat.id, message_id=query.message.message_id,
                                         media=types.InputMediaPhoto(media=i['PhotoURL'], caption=res),
                                         reply_markup=keyboard_prev_next)
            async with state.proxy() as data:
                data['listindex'] = listindex
        except IndexError:
            async with state.proxy() as data:
                data['listindex'] = 0
            print(f"IndexError listindex - {listindex}")
            logger.debug(f"IndexError listindex in prev - {listindex} mainlist -{main_list}")


@dp.callback_query_handler(lambda c: c.data == 'about')
async def change_image_callback(query: types.CallbackQuery, state: FSMContext):
    global main_list, listindex
    i = main_list[listindex]
    res = f"–ù–∞–∑–≤–∞: {i['Name']}\n–ö–∞—Ç–µ–≥–æ—Ä—ñ—è: {i['category']}\n–ê–¥—Ä–µ—Å–∞: {i['address']}\n–¢–µ–ª.: {i['tel']}\n–ì—Ä–∞—Ñ—ñ–∫: {i['work_schedule']}\n–°–∞–π—Ç:{i['SiteURL']}\n               {listindex+1} —ñ–∑ {len(main_list)}\n"
    await bot.edit_message_media(chat_id=query.message.chat.id, message_id=query.message.message_id,
                                     media=types.InputMediaPhoto(media=i['PhotoURL'], caption=res),
                                     reply_markup=keyboard_prev_next)

#-----------------------------------------------------------------------
@dp.callback_query_handler()
async def change_image_callback(query: types.CallbackQuery, state: FSMContext):
    global main_list
    category = query.data.split("_")[1] # –±–µ—Ä–µ–º —Å—Ç—Ä—ñ—á–∫—É —Ç–∏–ø—É "–∫–æ–º–∞–Ω–¥–∞_–∫–ª—ñ–Ω—ñ–∫–∏" —Ç–∞ –≤–∏—Ç—è–≥—É—î–º–æ —ñ–∑ –Ω–µ—ó –∫–ª—ñ–Ω—ñ–∫–∏
    URL = "https://vmi957205.contaboserver.net/terinfobot/ep/"
    resp = requests.get(URL, params={'category': category})

    if len(resp.text) > 2 and resp.status_code==requests.codes.ok:
        async with state.proxy() as data:
            data['main_list'] = resp.json()
            data['listindex'] = 0

        main_list = data['main_list']
        i = main_list[0]
       # res = f"–ù–∞–∑–≤–∞: {i['Name']}\n–û–ø–∏—Å: {i['About']}\n–ê–¥—Ä–µ—Å–∞: {i['address']}\n\n–¢–µ–ª.: {i['tel']}\n–ì—Ä–∞—Ñ—ñ–∫: {i['work_schedule']}\n–°–∞–π—Ç:{i['SiteURL']}\n                    1 —ñ–∑ {len(main_list)}\n"
        res= f"{getstring(i)}\n1 —ñ–∑ {len(main_list)}\n"
        try:
         await bot.send_photo(chat_id=query.message.chat.id, photo=i['PhotoURL'],caption=res,reply_markup=keyboard_prev_next)
        #await bot.send_message(chat_id=query.message.chat.id,text=res, reply_markup=keyboard_prev_next,parse_mode="HTML")
        except:
            print("aiogram.utils.exceptions.BadRequest: Wrong type of the web page content")
            await bot.send_message(chat_id=query.message.chat.id, text="–ø–æ–º–∏–ª–∫–∞ - aiogram.utils.exceptions.BadRequest", reply_markup=keyb_main)

    else:
        await bot.send_message(chat_id=query.message.chat.id,text="–ù–∞–∂–∞–ª—å —Ü—ñ –¥–∞–Ω—ñ –≤—ñ–¥—Å—É—Ç–Ω—ñ, –±–æ—Ç —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ üîß",reply_markup=keyb_main)


##-------------------–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞-------------------------##
if TEST_MODE:
    print("Bot running")
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ –≤ start_polling")
    #dp.middleware.setup(MidlWare())
    executor.start_polling(dp, skip_updates=True)
else:
    async def on_startup(dp):
        await bot.set_webhook(WEBHOOK_URL)
        logger.debug("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ")

    async def on_shutdown(dp):
        logger.debug('–ó—É–ø–∏–Ω—è—é—Å—è..')
        await bot.delete_webhook()
        await dp.storage.close()
        await dp.storage.wait_closed()

    if __name__ == '__main__':
       # dp.middleware.setup(MidlWare())
        start_webhook(
            dispatcher=dp,
            webhook_path=WEBHOOK_PATH,
            on_startup=on_startup,
            on_shutdown=on_shutdown,
            skip_updates=True,
            host=WEBAPP_HOST,
            port=WEBAPP_PORT,
        )



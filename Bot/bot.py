from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher, filters, FSMContext
from aiogram.utils import executor
import requests
import conf
from keyboards.keyboadrs import keyb_shops,keyb_piple,keyb_main, keyb_foot, keyb_kz, keyboard_prev_next_about, keyboard_prev_next, \
    keyb_organizations
from loguru import logger
from aiogram.utils.executor import start_webhook
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram_broadcaster import MessageBroadcaster

TEST_MODE = True

if conf.VPS:
    TEST_MODE = False

##------------------–ë–ª–æ–∫ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó-----------------##
if TEST_MODE:
    API_Token = conf.API_TOKEN_Test
else:
    API_Token = conf.TOKEN

#API_Token = '6296017322:AAHDZeFHr7738MRPMPcmMrgR34ywu_WWZaE'
ADMIN_ID = conf.ADMIN_ID
bot = Bot(token=API_Token)

logger.add("debug.txt")
# webhook settings
WEBHOOK_HOST = conf.WEBHOOK_HOST
WEBHOOK_PATH = conf.WEBHOOK_PATH
WEBHOOK_URL = f"{WEBHOOK_HOST}{WEBHOOK_PATH}"

# webserver settings
WEBAPP_HOST = '0.0.0.0'  # or ip 127.0.0.1
WEBAPP_PORT = 3007
bot = Bot(token=API_Token)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)


def getstring(li: list) -> str:
    # str = f"<strong>–ù–∞–∑–≤–∞:</strong> {li['Name']}\n<strong>–û–ø–∏—Å:</strong> {li['About']}\n<strong>–ê–¥—Ä–µ—Å–∞:</strong> {li['address']}\n"
    str = f"–ù–∞–∑–≤–∞: {li['Name']}\n–û–ø–∏—Å: {li['About']}\n–ê–¥—Ä–µ—Å–∞: {li['address']}\n"
    if li['tel'] != "":
        #  str+=f"<strong>–¢–µ–ª.:</strong> {li['tel']}\n"
        str += f"–¢–µ–ª.: {li['tel']}\n"
    if li['work_schedule'] != "":
        grafik = f"{li['work_schedule']}".split('#')
        tempstr = ""
        for i in grafik:
            tempstr += f"{i}\n"
        # str += f"<strong>–ì—Ä–∞—Ñ—ñ–∫:</strong> {tempstr}"
        str += f"–ì—Ä–∞—Ñ—ñ–∫: {tempstr}"
    if li['email'] != "":
        # str += f"<a href='{li['SiteURL']}'>–°–∞–π—Ç</a> "
        str += f"email: {li['email']}\n"
    if li['SiteURL'] != "":
        # str += f"<a href='{li['SiteURL']}'>–°–∞–π—Ç</a> "
        str += f"–°–∞–π—Ç: {li['SiteURL']}\n"
    if li['facebookURL'] != "":
        str += f"Facebook: {li['facebookURL']}\n"
    #   str += f"<a href='{li['Fa—ÅebookURL']}'>Facebook</a> "
    if li['InstagramURL'] != "":
        str += f"Instagram: {li['InstagramURL']}\n"
        # str += f"<a href='{li['InstagramURL']}'>Instagram</a> "

    return str

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    welcomeMessageText = '''–í–∞—Å –≤—ñ—Ç–∞—î –¢–µ—Ä–µ–±–æ–≤–ª—è–Ü–Ω—Ñ–æ–ë–æ—Ç.\n\n–¶–∏—Ñ—Ä–æ–≤–∏–π –ø—Ä–æ–¥—É–∫—Ç —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –≥—Ä–æ–º–∞–¥—Å—å–∫–æ—é –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—î—é –¶–µ–Ω—Ç—Ä —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —Ä–æ–∑–≤–∏—Ç–∫—É –≥—Ä–æ–º–∞–¥–∏.\n\n–ù–∞—à—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏:\nngozzrg@gmail.com\n098 151 0 251\nngozzrg.terebovlia.info\n<a href='https://www.facebook.com/ngozzrg'>Facebook</a>
    '''
    await message.answer(welcomeMessageText, parse_mode="HTML")
    await message.answer('–û–±–µ—Ä—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –∫–∞—Ç–µ–≥–æ—Ä—ñ—éüëá', reply_markup=keyb_main)
    URL = "https://orxid.in.ua/InfoBot/ep/us/"
    resp = requests.get(URL, params={'userName': message.from_user.first_name, 'userID': message.from_user.id})
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")
    if resp.text == "Subs":
        await bot.send_message(1080587853, f"–ù–æ–≤–µ–Ω—å–∫–∏–π –ø—ñ–¥–ø–∏—Å–∞–≤—Å—è {message.from_user.first_name}")
        logger.info(f"–ù–æ–≤–µ–Ω—å–∫–∏–π –ø—ñ–¥–ø–∏—Å–∞–≤—Å—è - {message.from_user.first_name} {message.from_user.id}")

@dp.message_handler(commands=['help'])
async def start(message: types.Message):
    welcomeMessageText = '''–í–∞—Å –≤—ñ—Ç–∞—î –¢–µ—Ä–µ–±–æ–≤–ª—è–Ü–Ω—Ñ–æ–ë–æ—Ç.\n–¶–µ –±–∞–≥–∞—Ç–æ—Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–π —á–∞—Ç-–±–æ—Ç, —è–∫–∏–π –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î —É—Å—ñ –ª–æ–∫–∞—Ü—ñ—ó —Ç–∞ –æ–±‚Äô—î–∫—Ç–∏ –¢–µ—Ä–µ–±–æ–≤–ª—è–Ω—Å—å–∫–æ—ó –≥—Ä–æ–º–∞–¥–∏ –∑ —Ä—ñ–∑–Ω–æ–º–∞–Ω—ñ—Ç–Ω–∏–º–∏ —Ñ—É–Ω–∫—Ü—ñ—è–º–∏, —è–∫—ñ –±—É–¥—É—Ç—å —É–¥–æ—Å–∫–æ–Ω–∞–ª—é–≤–∞—Ç–∏—Å—è —Ä–∞–∑–æ–º –∑ —Ä–æ–∑–≤–∏—Ç–∫–æ–º –ø—Ä–æ–¥—É–∫—Ç—É.\n–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ –ø—Ä–æ –ø—Ä–æ—î–∫—Ç https://orxid.in.ua/TerInfoBot/\n–ü—Ä–æ—î–∫—Ç —Å–æ—Ü—ñ–∞–ª—å–Ω–∏–π, —Ç–∞ —Ñ—ñ–Ω–∞–Ω—Å—É—î—Ç—å—Å—è –º–µ—Ç–æ–¥–æ–º —Å–ø—ñ–ª—å–Ω–æ–∫–æ—à—Ç—É, —Ç–æ–±—Ç–æ –∫–æ–∂–µ–Ω –º–æ–∂–µ –≤–Ω–µ—Å—Ç–∏ –∫–æ—à—Ç–∏ –Ω–∞ —Ä–æ–∑–≤–∏—Ç–æ–∫ —ñ–Ω—ñ—Ü—ñ–∞—Ç–∏–≤–∏.\n–Ø–∫—â–æ –≤–∏ —Ö–æ—á–µ—Ç–µ –≤—ñ–¥–æ–±—Ä–∞–∑–∏—Ç–∏ —Å–µ–±–µ —É –±–æ—Ç—ñ, –∑–∞–ø–æ–≤–Ω—é–π—Ç–µ —Ñ–æ—Ä–º—É https://forms.gle/wq3JqVqze5YtdMTH7 —ñ –º–∏ –Ω–∞–¥—ñ—à–ª–µ–º–æ –¥–µ—Ç–∞–ª—ñ.\n–Ø–∫—â–æ –≤–∞–º –∑–Ω–∞–¥–æ–±–∏—Ç—å—Å—è –¥–æ–ø–æ–º–æ–≥–∞ —É –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—ñ –ª–æ–∫–∞—Ü—ñ—ó, –∑–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—è:\n–ì–û –¶–¶–†–ì
098 151 0 251
ngozzrg@gmail.com 
ngozzrg.terebovlia.info  
@Irynamifm
–ë–∞–∂–∞—î–º–æ —É—Å–ø—ñ—Ö—ñ–≤! –†–∞–∑–æ–º –º–∏ —Å—Ñ–æ—Ä–º—É—î–º–æ —Ü–∏—Ñ—Ä–æ–≤—É –≥—Ä–æ–º–∞–¥—É!
    '''
    await message.answer(welcomeMessageText, parse_mode="HTML")

@dp.message_handler(filters.Text(startswith="–ó–∞–∫–ª–∞–¥–∏ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è"))
async def foots(message: types.Message, state: FSMContext):
    await bot.send_photo(chat_id=message.chat.id,
                         photo="https://media.acc.cv.ua/news/article/2020/08/16/62182/TGAyxyaM5Bh1c6pSizF2.w575.jpg",
                         caption="", reply_markup=keyb_foot)
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")


#@dp.message_handler(filters.Text(startswith="2–ì–æ—Å–ø–æ–¥–∞—Ä—Å—å–∫—ñ"))
# async def foots(message: types.Message, state: FSMContext):
#     keyb = types.InlineKeyboardMarkup()
#
#     but_2 = types.InlineKeyboardButton(text='–ì–æ—Å–ø–æ–¥–∞—Ä—Å—å–∫—ñüß¥', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ú–∞–≥–ì–æ—Å–ø–æ–¥–∞—Ä—Å—å–∫—ñ')
#     but_3 = types.InlineKeyboardButton(text='–î–∏—Ç—è—á—ñüëß', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ú–∞–≥–î–∏—Ç—è—á—ñ')
#     but_4 = types.InlineKeyboardButton(text='–ü–æ—Å—É–¥ü´ñ', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ú–∞–≥–ü–æ—Å—É–¥')
#     but_5 = types.InlineKeyboardButton(text='–ö–Ω–∏–≥–∏ —Ç–∞ –∫–∞–Ω—Ü–µ–ª—è—Ä—ñ—èüìö', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ö–∞–Ω—Ü–µ–ª—è—Ä—ñ—è')
#     but_6 = types.InlineKeyboardButton(text='–ê–≤—Ç–æ–º–∞–≥–∞–∑–∏–Ω–∏‚öôÔ∏è', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ê–≤—Ç–æ–º–∞–≥–∞–∑–∏–Ω–∏')
#     but_7 = types.InlineKeyboardButton(text='–ü—Ä–æ–¥—É–∫—Ç–æ–≤—ñüßÄ', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ú–∞–≥–ü—Ä–æ–¥—É–∫—Ç–æ–≤—ñ')
#     but_8 = types.InlineKeyboardButton(text='–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ñü¶Æ', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ú–∞–≥–í–µ—Ç–∏—Ä–∏–Ω–∞—Ä–Ω—ñ')
#     but_9 = types.InlineKeyboardButton(text='–û–¥—è–≥ —Ç–∞ –≤–∑—É—Ç—Ç—èüë†', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ú–∞–≥–û–¥—è–≥–¢–∞–í–∑—É—Ç—Ç—è')
#     but_10 = types.InlineKeyboardButton(text='–ö–≤—ñ—Ç–∏ —Ç–∞ –¥–µ–∫–æ—Äüåπ', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ú–∞–≥–ö–≤—ñ—Ç–∏–î–µ–∫–æ—Ä')
#     but_11 = types.InlineKeyboardButton(text='–¢–µ–ª–µ—Ñ–æ–Ω–∏ —Ç–∞ –æ—Ä–≥—Ç–µ—Ö–Ω—ñ–∫–∞üì±', callback_data='–∫–æ–º–∞–Ω–¥–∞_–¢–µ–ª–µ—Ñ–æ–Ω–∏–û—Ä–≥—Ç–µ—Ö–Ω—ñ–∫–∞')
#     but_12 = types.InlineKeyboardButton(text='–£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω—ñ –º–∞–≥–∞–∑–∏–Ω–∏üõç', callback_data='–∫–æ–º–∞–Ω–¥–∞_–£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω—ñ–ú–∞–≥–∞–∑–∏–Ω–∏')
#     keyb.add(but_1, but_7).add(but_2, but_8).add(but_3, but_9).add(but_4, but_10).add(but_5, but_11).add(but_6, but_12)
#     # await message.answer("–î–∞–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ!",reply_markup=keyb)
#     Url = 'https://ceha.com.ua/wp-content/uploads/2016/02/kompleksnoe-reklamnoe-oformlenie-magazinov-supermarketov.jpg'
#     await bot.send_photo(chat_id=message.chat.id, photo=Url, caption="", reply_markup=keyb)
#     logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")

@dp.message_handler(filters.Text(startswith="–ì–æ—Å–ø–æ–¥–∞—Ä—Å—å–∫—ñ"))
async def foots(message: types.Message, state: FSMContext):
    keyb = types.InlineKeyboardMarkup()
    but_1 = types.InlineKeyboardButton(text='–î–ª—è —Ä–µ–º–æ–Ω—Ç—Éüõ†', callback_data='–∫–æ–º–∞–Ω–¥–∞_–î–ª—è–†–µ–º–æ–Ω—Ç—É')
    but_2 = types.InlineKeyboardButton(text='–ü–æ–±—É—Ç–æ–≤–∞ —Ö—ñ–º—ñ—è, –∫–æ—Å–º–µ—Ç–∏–∫–∞üíÑ', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ü–æ–±—É—Ç–æ–≤–∞–•—ñ–º—ñ—è')
    but_3 = types.InlineKeyboardButton(text='–ú–µ–±–ª—ñüõè', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ú–µ–±–ª—ñ')
    but_4 = types.InlineKeyboardButton(text='–ü–æ—Å—É–¥, —Å–∫–ª–æü´ñ', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ú–∞–≥–ü–æ—Å—É–¥')
    but_5 = types.InlineKeyboardButton(text='–°–∞–Ω—Ç–µ—Ö–Ω—ñ–∫–∞üöø', callback_data='–∫–æ–º–∞–Ω–¥–∞_–°–∞–Ω—Ç–µ—Ö–Ω—ñ–∫–∞')
    but_7 = types.InlineKeyboardButton(text='–î—ñ–º, —Å–∞–¥, –≥–æ—Ä–æ–¥', callback_data='–∫–æ–º–∞–Ω–¥–∞_–î—ñ–º–°–∞–¥–ì–æ—Ä–æ–¥')
    but_8 = types.InlineKeyboardButton(text='–í—ñ–∫–Ω–∞, –¥–≤–µ—Ä—ñüö™', callback_data='–∫–æ–º–∞–Ω–¥–∞_–í—ñ–∫–Ω–∞–î–≤–µ—Ä—ñ')
    but_9 = types.InlineKeyboardButton(text='–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ñ –º–∞–≥–∞–∑–∏–Ω–∏üê∂', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ú–∞–≥–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ñ')
    keyb.add(but_1, but_2).add(but_3, but_4).add(but_5, but_9).add(but_7, but_8)
    # await message.answer("–î–∞–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ!",reply_markup=keyb)
    Url = 'https://profmarket.com.ua/wp-content/uploads/2021/08/Shopping-stores-Slide-3-Profmarket.jpg'
    await bot.send_photo(chat_id=message.chat.id, photo=Url, caption="", reply_markup=keyb)
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")

@dp.message_handler(filters.Text(startswith="–û–¥—è–≥ —Ç–∞ —ñ–Ω—à–µ"))
async def foots(message: types.Message, state: FSMContext):
    keyb = types.InlineKeyboardMarkup()
    but_1 = types.InlineKeyboardButton(text='–û–¥—è–≥ —Ç–∞ –≤–∑—É—Ç—Ç—èüëñ', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ú–∞–≥–û–¥—è–≥–¢–∞–í–∑—É—Ç—Ç—è')
    but_2 = types.InlineKeyboardButton(text='–°—É–º–∫–∏ —Ç–∞ –∞–∫—Å–µ—Å—É–∞—Ä–∏üëú', callback_data='–∫–æ–º–∞–Ω–¥–∞_–°—É–º–∫–∏–ê–∫—Å–µ—Å—É–∞—Ä–∏')
    but_3 = types.InlineKeyboardButton(text='–î–∏—Ç—è—á–∏–π –æ–¥—è–≥, —ñ–≥—Ä–∞—à–∫–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ú–∞–≥–î–∏—Ç—è—á—ñ')
    but_4 = types.InlineKeyboardButton(text='–í–∂–∏–≤–∞–Ω–∏–π –æ–¥—è–≥', callback_data='–∫–æ–º–∞–Ω–¥–∞_–í–∂–∏–≤–∞–Ω–∏–π–û–¥—è–≥')
    but_5 = types.InlineKeyboardButton(text='–®—Ç–æ—Ä–∏, —Ç—é–ª—ñ —Ç–∞ —ñ–Ω—à–µ', callback_data='–∫–æ–º–∞–Ω–¥–∞_–®—Ç–æ—Ä–∏–¢—é–ª—ñ')
    but_6 = types.InlineKeyboardButton(text='–û–ø—Ç–∏–∫–∞üëì', callback_data='–∫–æ–º–∞–Ω–¥–∞_–û–ø—Ç–∏–∫–∞')
    keyb.add(but_1).add(but_2).add(but_3).add(but_4).add(but_5).add(but_6)
    # await message.answer("–î–∞–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ!",reply_markup=keyb)
    Url = 'https://109.te.ua/firms/photos/13754/3_1.jpg'
    await bot.send_photo(chat_id=message.chat.id, photo=Url, caption="", reply_markup=keyb)
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")



@dp.message_handler(filters.Text(startswith="–ü—Ä–æ–¥—É–∫—Ç–æ–≤—ñ"))
async def foots(message: types.Message):
    keyb = types.InlineKeyboardMarkup()
    but_1 = types.InlineKeyboardButton(text='–°—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç–∏üõí', callback_data='–∫–æ–º–∞–Ω–¥–∞_–°—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç–∏')
    but_2 = types.InlineKeyboardButton(text='–ó–≤–∏—á–∞–π–Ω—ñ', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ú–∞–≥–ó–≤–∏—á–∞–π–Ω—ñ')
    but_3 = types.InlineKeyboardButton(text='–û–≤–æ—á—ñ, —Ñ—Ä—É–∫—Ç–∏üçé', callback_data='–∫–æ–º–∞–Ω–¥–∞_–û–≤–æ—á—ñ–§—Ä—É–∫—Ç–∏')
    but_4 = types.InlineKeyboardButton(text='–î–∏—Ç—è—á–µ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è', callback_data='–∫–æ–º–∞–Ω–¥–∞_–î–∏—Ç—è—á–µ–•–∞—Ä—á—É–≤–∞–Ω–Ω—è')
    keyb.add(but_1).add(but_2).add(but_3).add(but_4)
    # await message.answer("–î–∞–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ",reply_markup=keyb)
    url = 'https://galas.te.ua/wp-content/uploads/2017/04/543.jpg'
    await bot.send_photo(chat_id=message.chat.id, photo=url, caption="", reply_markup=keyb)
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")

@dp.message_handler(filters.Text(startswith="–ö–≤—ñ—Ç–∏, –¥–µ–∫–æ—Ä, –∑–æ–ª–æ—Ç–æ"))
async def foots(message: types.Message):
    keyb = types.InlineKeyboardMarkup()
    but_1 = types.InlineKeyboardButton(text='–ö–≤—ñ—Ç–∏ —Ç–∞ —Ñ–ª–æ—Ä–∏—Å—Ç–∏–∫–∞üå∑', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ú–∞–≥–ö–≤—ñ—Ç–∏–î–µ–∫–æ—Ä')
    but_2 = types.InlineKeyboardButton(text='–î–µ–∫–æ—Ä', callback_data='–∫–æ–º–∞–Ω–¥–∞_–î–µ–∫–æ—Ä')
    but_3 = types.InlineKeyboardButton(text='–ü–æ–¥–∞—Ä—É–Ω–∫–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ü–æ–¥–∞—Ä—É–Ω–∫–∏')
    but_4 = types.InlineKeyboardButton(text='–ó–æ–ª–æ—Ç–æüíç', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ó–æ–ª–æ—Ç–æ')
    keyb.add(but_1).add(but_2).add(but_3).add(but_4)
    # await message.answer("–î–∞–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ",reply_markup=keyb)
    url = 'https://img.ukr.bio/data/articles/av/5222.jpg'
    await bot.send_photo(chat_id=message.chat.id, photo=url, caption="", reply_markup=keyb)
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")

@dp.message_handler(filters.Text(startswith="–¢–µ—Ö–Ω—ñ–∫–∞, –∫–∞–Ω—Ü–µ–ª—è—Ä—ñ—è"))
async def foots(message: types.Message):
    keyb = types.InlineKeyboardMarkup()
    but_1 = types.InlineKeyboardButton(text='–¢–µ–ª–µ—Ñ–æ–Ω–∏ —Ç–∞ –∞–∫—Å–µ—Å—É–∞—Ä–∏üì±', callback_data='–∫–æ–º–∞–Ω–¥–∞_–¢–µ–ª–µ—Ñ–æ–Ω–∏')
    but_2 = types.InlineKeyboardButton(text='–ü–æ–±—É—Ç–æ–≤–∞ —Ç–µ—Ö–Ω—ñ–∫–∞üì∫', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ü–æ–±—É—Ç–æ–≤–∞–¢–µ—Ö–Ω—ñ–∫–∞')
    but_3 = types.InlineKeyboardButton(text='–û—Ä–≥—Ç–µ—Ö–Ω—ñ–∫–∞üñ•', callback_data='–∫–æ–º–∞–Ω–¥–∞_–û—Ä–≥–¢–µ—Ö–Ω—ñ–∫–∞')
    but_4 = types.InlineKeyboardButton(text='–ö–∞–Ω—Ü–µ–ª—è—Ä—ñ—è, –∫–Ω–∏–≥–∏üìî', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ö–∞–Ω—Ü–µ–ª—è—Ä—ñ—è')
    keyb.add(but_1).add(but_2).add(but_3).add(but_4)
    # await message.answer("–î–∞–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ",reply_markup=keyb)
    url = 'https://imex.kr.ua/wp-content/uploads/2017/03/shop.jpg'
    await bot.send_photo(chat_id=message.chat.id, photo=url, caption="", reply_markup=keyb)
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")

@dp.message_handler(filters.Text(startswith="–ê–≤—Ç–æ, –≤–µ–ª–æ"))
async def foots(message: types.Message):
    keyb = types.InlineKeyboardMarkup()
    but_1 = types.InlineKeyboardButton(text='–ê–≤—Ç–æ–∑–∞–ø—á–∞—Å—Ç–∏–Ω–∏üõû', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ê–≤—Ç–æ–º–∞–≥–∞–∑–∏–Ω–∏')
    but_2 = types.InlineKeyboardButton(text='–ü—Ä–æ–¥–∞–∂ –∞–≤—Ç–æüöó', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ü—Ä–æ–¥–∞–∂–ê–≤—Ç–æ')
    but_3 = types.InlineKeyboardButton(text='–°—ñ–ª—å—Å—å–∫–∞ —Ç–µ—Ö–Ω—ñ–∫–∞, –≤–µ–ª–æ—Å–∏–ø–µ–¥–∏üöú', callback_data='–∫–æ–º–∞–Ω–¥–∞_–°—ñ–ª—å—Å—å–∫–∞–í–µ–ª–æ—Å–∏–ø–µ–¥–∏')
    keyb.add(but_1).add(but_2).add(but_3)
    # await message.answer("–î–∞–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ",reply_markup=keyb)
    url = 'https://www.mukachevo.net/Content/img/news/870/p_870604_2_slidertop2.jpg'
    await bot.send_photo(chat_id=message.chat.id, photo=url, caption="", reply_markup=keyb)
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")

@dp.message_handler(filters.Text(startswith="–£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω—ñ –º–∞–≥–∞–∑–∏–Ω–∏"))
async def foots(message: types.Message):
    keyb = types.InlineKeyboardMarkup()
    but_1 = types.InlineKeyboardButton(text='–¢–æ—Ä–≥–æ–≤—ñ —Ü–µ–Ω—Ç—Ä–∏üè¢', callback_data='–∫–æ–º–∞–Ω–¥–∞_–¢–æ—Ä–≥–æ–≤—ñ–¶–µ–Ω—Ç—Ä–∏')
    but_2 = types.InlineKeyboardButton(text='–ê–ª–∫–æ–≥–æ–ª—å, —Ç—é—Ç—é–Ω', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ê–ª–∫–æ–≥–æ–ª—å–¢—é—Ç—é–Ω')
    but_3 = types.InlineKeyboardButton(text='–†—ñ–∑–Ω—ñ –º–∞–≥–∞–∑–∏–Ω–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω—ñ–º–∞–≥–∞–∑–∏–Ω–∏')
    keyb.add(but_1).add(but_2).add(but_3)
    # await message.answer("–î–∞–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ",reply_markup=keyb)
    url = 'https://gullivercenter.com/img/home-shop.jpg'
    await bot.send_photo(chat_id=message.chat.id, photo=url, caption="", reply_markup=keyb)
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")

@dp.message_handler(filters.Text(startswith="–ö—Ä–∞—Å–∞ —ñ –∑–¥–æ—Ä–æ–≤'—èüëó"))
async def foots(message: types.Message, state: FSMContext):
    await bot.send_photo(chat_id=message.chat.id,
                         photo="https://inventure.com.ua/img/thumb.990.660/upload/pic2020-1q/HairSalon-girl-pic.jpg",
                         caption="", reply_markup=keyb_kz)
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")


# @dp.message_handler(filters.Text(startswith="–ú–∞–≥–∞–∑–∏–Ω–∏"))
# async def foots(message: types.Message):
#     await message.answer("–î–∞–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.")
#     logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")


@dp.message_handler(filters.Text(startswith="–ü–æ—Å–ª—É–≥–∏"))
async def foots(message: types.Message, state: FSMContext):
    keyb = types.InlineKeyboardMarkup()
    but_1 = types.InlineKeyboardButton(text='–ê—Ç–µ–ª—å—î‚úÇÔ∏è', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ê—Ç–µ–ª—å—î')
    but_2 = types.InlineKeyboardButton(text='–†–µ–º–æ–Ω—Ç –∞–≤—Ç–æüîß', callback_data='–∫–æ–º–∞–Ω–¥–∞_–†–µ–º–æ–Ω—Ç–ê–≤—Ç–æ')
    but_3 = types.InlineKeyboardButton(text='–†–µ–º–æ–Ω—Ç —Ç–µ—Ö–Ω—ñ–∫–∏ü™õ', callback_data='–∫–æ–º–∞–Ω–¥–∞_–†–µ–º–æ–Ω—Ç–¢–µ—Ö–Ω—ñ–∫–∏')
    but_4 = types.InlineKeyboardButton(text='–Æ—Ä–∏–¥–∏—á–Ω—ñ –ø–æ—Å–ª—É–≥–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ù–æ—Ç–∞—Ä—ñ—É—Å–∏')
    but_5 = types.InlineKeyboardButton(text='–í—ñ–¥–ø–æ—á–∏–Ω–æ–∫ —Ç–∞ –¥–∏—Ç—è—á–µ –¥–æ–∑–≤—ñ–ª–ª—è', callback_data='–∫–æ–º–∞–Ω–¥–∞_–î–∏—Ç—è—á–µ–î–æ–∑–≤—ñ–ª–ª—è')
    but_6 = types.InlineKeyboardButton(text='–Ü–Ω—Ç–µ—Ä–Ω–µ—Ç-–ø—Ä–æ–≤–∞–π–¥–µ—Ä–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–Ü–Ω—Ç–µ—Ä–Ω–µ—Ç–ü—Ä–æ–≤–∞–π–¥–µ—Ä–∏')
    but_7 = types.InlineKeyboardButton(text='–ü–æ–ª—ñ–≥—Ä–∞—Ñ—ñ—è —Ç–∞ —Å—Ç—É–¥—ñ—è –¥–∏–∑–∞–π–Ω—É', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ü–æ–ª—ñ–≥—Ä–∞—Ñ—ñ—è–î–∏–∑–∞–π–Ω')
    but_8 = types.InlineKeyboardButton(text='–î–æ—Å—Ç–∞–≤–∫–∞', callback_data='–∫–æ–º–∞–Ω–¥–∞_–î–æ—Å—Ç–∞–≤–∫–∞')
    but_9 = types.InlineKeyboardButton(text='–ó–∞–ø—Ä–∞–≤–∫–∏, –∞–≤—Ç–æ–º–∏–π–∫–∏üöó', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ó–∞–ø—Ä–∞–≤–∫–∏–ê–≤—Ç–æ–º–∏–π–∫–∏')
    but_10 = types.InlineKeyboardButton(text='–ë—É–¥—ñ–≤–µ–ª—å–Ω—ñ —Ä–æ–±–æ—Ç–∏üë∑‚Äç‚ôÇÔ∏è', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ë—É–¥—ñ–≤–µ–ª—å–Ω—ñ–†–æ–±–æ—Ç–∏')
    but_11 = types.InlineKeyboardButton(text='–†–∏—Ç—É–∞–ª—å–Ω—ñ –ø–æ—Å–ª—É–≥–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–†–∏—Ç—É–∞–ª—å–Ω—ñ–ü–æ—Å–ª—É–≥–∏')
    but_12 = types.InlineKeyboardButton(text='–û—Å–≤—ñ—Ç–Ω—ñ –ø–æ—Å–ª—É–≥–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–û—Å–≤—ñ—Ç–Ω—ñ–ü–æ—Å–ª—É–≥–∏')
    but_13 = types.InlineKeyboardButton(text='–§–æ—Ç–æ, –≤—ñ–¥–µ–æ –ø–æ—Å–ª—É–≥–∏üìπ', callback_data='–∫–æ–º–∞–Ω–¥–∞_–§–æ—Ç–æ–í—ñ–¥–µ–æ')
    but_14 = types.InlineKeyboardButton(text='–†—ñ–∑–Ω–µ', callback_data='–∫–æ–º–∞–Ω–¥–∞_–†—ñ–∑–Ω–µ')
    keyb.add(but_1).add(but_2, but_4).add(but_3, but_8).add(but_5).add(but_6, but_9).add(but_7).add(but_10).add(but_11,but_12).add(but_13,but_14)
    # await message.answer("–î–∞–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ", reply_markup=keyb)
    await bot.send_photo(chat_id=message.chat.id,
                         photo="https://orxid.in.ua/TerInfBotPhoto/orx.jpg",
                         caption="", reply_markup=keyb)
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")


@dp.message_handler(filters.Text(startswith="–•–æ—á–µ—à –±—É—Ç–∏ —Ç—É—Ç"))
async def foots(message: types.Message, state: FSMContext):
    await message.answer("<a href='https://forms.gle/FNpJdhBPsPcQFc4c9'>–ü–µ—Ä–µ–π—Ç–∏ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º</a> —â–æ–± –ø–æ–¥–∞—Ç–∏ –¥–∞–Ω—ñ.\n", reply_markup=keyb_main, parse_mode="HTML")
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")


@dp.message_handler(filters.Text(startswith="–í–ü–û"))
async def foots(message: types.Message, state: FSMContext):
    keyb = types.InlineKeyboardMarkup()
    but_1 = types.InlineKeyboardButton(text='–î–æ—Ä–æ–∂–Ω—è –∫–∞—Ä—Ç–∞ –í–ü–û', callback_data='–∫–æ–º–∞–Ω–¥–∞_–î–æ—Ä–æ–∂–Ω—è–ö–∞—Ä—Ç–∞–í–ü–û')
    but_2 = types.InlineKeyboardButton(text='–ö–æ—Ä–∏—Å–Ω—ñ –ª–æ–∫–∞—Ü—ñ—ó', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ö–æ—Ä–∏—Å–Ω—ñ–õ–æ–∫–∞—Ü—ñ—ó')
    but_3 = types.InlineKeyboardButton(text='–î–æ–ø–æ–º–æ–≥–∞ –≤—ñ–π—Å—å–∫–æ–≤–∏–ºü™ñ', callback_data='–∫–æ–º–∞–Ω–¥–∞_–î–æ–ø–æ–º–æ–≥–∞–í—ñ–π—Å—å–∫–æ–≤–∏–º')
    but_4 = types.InlineKeyboardButton(text='–†–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ–π–Ω—ñ —Ü–µ–Ω—Ç—Ä–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–†–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ–π–Ω—ñ–¶–µ–Ω—Ç—Ä–∏')
    but_5 = types.InlineKeyboardButton(text='–ü—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ü—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–∞–ü—ñ–¥—Ç—Ä–∏–º–∫–∞')
    but_6 = types.InlineKeyboardButton(text='–ü–æ—à—É–∫ —Ä–æ–±–æ—Ç–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ü–æ—à—É–∫–†–æ–±–æ—Ç–∏')
    keyb.add(but_1).add(but_2).add(but_3).add(but_4).add(but_5).add(but_6)
    # await message.answer("–î–∞–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ", reply_markup=keyb)
    url = 'https://upravbud.info/content/uploads/2022/04/016-980x620.png'
    await bot.send_photo(chat_id=message.chat.id, photo=url, caption="", reply_markup=keyb)
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")


@dp.message_handler(filters.Text(startswith="–û—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó"))
async def foots(message: types.Message, state: FSMContext):
    await message.answer("–û–±–µ—Ä—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ–πüëá", reply_markup=keyb_organizations)
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")

@dp.message_handler(filters.Text(startswith="–ñ–∏—Ç–µ–ª—é"))
async def foots(message: types.Message, state: FSMContext):
    await message.answer("–û–±–µ—Ä—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –∫–∞—Ç–µ–≥–æ—Ä—ñ—éüëá", reply_markup=keyb_piple)
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")

@dp.message_handler(filters.Text(startswith="–ú–∞–≥–∞–∑–∏–Ω–∏"))
async def foots(message: types.Message, state: FSMContext):
    await message.answer("–û–±–µ—Ä—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –∫–∞—Ç–µ–≥–æ—Ä—ñ—éüëá", reply_markup=keyb_shops)
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")


@dp.message_handler(filters.Text(startswith="–§—ñ–Ω–∞–Ω—Å–æ–≤—ñ —Ç–∞ –∫—Ä–µ–¥–∏—Ç–Ω—ñ —É—Å—Ç–∞–Ω–æ–≤–∏"))
async def foots(message: types.Message):
    keyb = types.InlineKeyboardMarkup()
    but_1 = types.InlineKeyboardButton(text='–ë–∞–Ω–∫–∏üí≥', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ë–∞–Ω–∫–∏')
    but_2 = types.InlineKeyboardButton(text='–û–±–º—ñ–Ω –í–∞–ª—é—Çüíµ', callback_data='–∫–æ–º–∞–Ω–¥–∞_–û–±–º—ñ–Ω–í–∞–ª—é—Ç')
    but_3 = types.InlineKeyboardButton(text='–ö—Ä–µ–¥–∏—Ç–Ω—ñ —Å–ø—ñ–ª–∫–∏üí∞', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ö—Ä–µ–¥–∏—Ç–Ω—ñ–°–ø—ñ–ª–∫–∏')
    but_4 = types.InlineKeyboardButton(text='–°—Ç—Ä–∞—Ö–æ–≤—ñ', callback_data='–∫–æ–º–∞–Ω–¥–∞_–°—Ç—Ä–∞—Ö–æ–≤—ñ')
    keyb.add(but_1).add(but_2).add(but_3).add(but_4)
    # await message.answer("–î–∞–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ",reply_markup=keyb)
    url = 'https://minfin.com.ua/img/2022/85137707/0988d5c75c8fe6ca4b45d900175db854.jpeg'
    await bot.send_photo(chat_id=message.chat.id, photo=url, caption="", reply_markup=keyb)
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")


@dp.message_handler(filters.Text(startswith="–ì—Ä–æ–º–∞–¥—Å—å–∫—ñ —Ç–∞ –±–ª–∞–≥–æ–¥—ñ–π–Ω—ñ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó"))
async def foots(message: types.Message, state: FSMContext):
    keyb = types.InlineKeyboardMarkup()
    but_1 = types.InlineKeyboardButton(text='–ì—Ä–æ–º–∞–¥—Å—å–∫—ñ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—óüè´', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ì—Ä–æ–º–∞–¥—Å—å–∫—ñ_–æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó')
    but_2 = types.InlineKeyboardButton(text='–ë–ª–∞–≥–æ–¥—ñ–π–Ω—ñ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ë–ª–∞–≥–æ–¥—ñ–π–Ω—ñ_–æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó')
    but_3 = types.InlineKeyboardButton(text='–°–ø—ñ–ª–∫–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–°–ø—ñ–ª–∫–∏')
    but_4 = types.InlineKeyboardButton(text='–†–µ–ª—ñ–≥—ñ–π–Ω—ñ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó', callback_data='–∫–æ–º–∞–Ω–¥–∞_–†–µ–ª—ñ–≥—ñ–π–Ω—ñ_–æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó')
    keyb.add(but_1).add(but_2).add(but_3).add(but_4)
    # await message.answer("–î–∞–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ",reply_markup=keyb)
    url = 'https://minfin.com.ua/img/2022/85137707/0988d5c75c8fe6ca4b45d900175db854.jpeg'
    await bot.send_photo(chat_id=message.chat.id, photo=url, caption="", reply_markup=keyb)
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")


@dp.message_handler(filters.Text(startswith="–ú—ñ—Å—å–∫–∞ —Ä–∞–¥–∞"))
async def foots(message: types.Message, state: FSMContext):
    keyb_mr = types.InlineKeyboardMarkup()
    but_1 = types.InlineKeyboardButton(text='–ì–æ–ª–æ–≤–∞ –≥—Ä–æ–º–∞–¥–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ì–æ–ª–æ–≤–∞–ì—Ä–æ–º–∞–¥–∏')
    but_2 = types.InlineKeyboardButton(text='–ó–∞—Å—Ç—É–ø–Ω–∏–∫–∏ –≥–æ–ª–æ–≤–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ó–∞—Å—Ç—É–ø–Ω–∏–∫–∏–ì–æ–ª–æ–≤–∏')
    but_3 = types.InlineKeyboardButton(text='–°—Ç–∞—Ä–æ—Å—Ç–∞—Ç–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–°—Ç–∞—Ä–æ—Å—Ç–∏')
    but_4 = types.InlineKeyboardButton(text='–í—ñ–¥–¥—ñ–ª–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–í—ñ–¥–¥—ñ–ª–∏')
    keyb_mr.add(but_1).add(but_2).add(but_3).add(but_4)
    url = 'https://orxid.in.ua/TerInfBotPhoto/RADA.jpg'
    await bot.send_photo(chat_id=message.chat.id, photo=url, caption="", reply_markup=keyb_mr)
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")


@dp.message_handler(filters.Text(startswith="–û—Å–≤—ñ—Ç–∞"))
async def foots(message: types.Message, state: FSMContext):
    keyb_os = types.InlineKeyboardMarkup()
    but_1 = types.InlineKeyboardButton(text='–®–∫–æ–ª–∏ –Ü —Å—Ç—É–ø–µ–Ω—ñ–≤', callback_data='–∫–æ–º–∞–Ω–¥–∞_–®–∫–æ–ª–∏–Ü—Å—Ç—É–ø–µ–Ω—ñ–≤')
    but_2 = types.InlineKeyboardButton(text='–®–∫–æ–ª–∏ –Ü–Ü —Å—Ç—É–ø–µ–Ω—ñ–≤', callback_data='–∫–æ–º–∞–Ω–¥–∞_–®–∫–æ–ª–∏–Ü–Ü—Å—Ç—É–ø–µ–Ω—ñ–≤')
    but_3 = types.InlineKeyboardButton(text='–®–∫–æ–ª–∏ –Ü–Ü–Ü —Å—Ç—É–ø–µ–Ω—ñ–≤', callback_data='–∫–æ–º–∞–Ω–¥–∞_–®–∫–æ–ª–∏–Ü–Ü–Ü—Å—Ç—É–ø–µ–Ω—ñ–≤')
    but_4 = types.InlineKeyboardButton(text='–°–∞–¥–æ—á–∫–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–°–∞–¥–æ—á–∫–∏')
    but_5 = types.InlineKeyboardButton(text='–ü–æ–∑–∞—à–∫—ñ–ª—å–Ω–∞ –æ—Å–≤—ñ—Ç–∞', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ü–æ–∑–∞—à–∫—ñ–ª—å–Ω–∞–û—Å–≤—ñ—Ç–∞')
    keyb_os.add(but_4).add(but_1).add(but_2).add(but_3).add(but_5)
    # await message.answer("–î–∞–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ",reply_markup=keyb_os)
    await bot.send_photo(chat_id=message.chat.id,
                         photo="https://images.unian.net/photos/2022_09/thumb_files/400_0_1664111474-8193.jpg?r=616244",
                         caption="", reply_markup=keyb_os)
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")


@dp.message_handler(filters.Text(startswith="–ö—É–ª—å—Ç—É—Ä–∞"))
async def foots(message: types.Message, state: FSMContext):
    keyb = types.InlineKeyboardMarkup()
    but_1 = types.InlineKeyboardButton(text='–¶–ö—ñ–î–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–¶–ö—ñ–î–∏')
    but_2 = types.InlineKeyboardButton(text='–ú—É–∑–µ—ó, —Å–∞–¥–∏–±–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ú—É–∑–µ—ó–°–∞–¥–∏–±–∏')
    but_3 = types.InlineKeyboardButton(text='–ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∏üìö', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∏')
    but_4 = types.InlineKeyboardButton(text='–¢—É—Ä–∏–∑–ºüèñ', callback_data='–∫–æ–º–∞–Ω–¥–∞_–¢—É—Ä–∏–∑–º')
    keyb.add(but_1).add(but_2).add(but_3).add(but_4)
    url = 'https://orxid.in.ua/TerInfBotPhoto/cylture.jpg'
    await bot.send_photo(chat_id=message.chat.id, photo=url, caption="", reply_markup=keyb)
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")

@dp.message_handler(filters.Text(startswith="–í–∞–∂–ª–∏–≤—ñ —É—Å—Ç–∞–Ω–æ–≤–∏"))
async def foots(message: types.Message, state: FSMContext):
    keyb = types.InlineKeyboardMarkup()
    but_1 = types.InlineKeyboardButton(text='–î–µ—Ä–∂–∞–≤–Ω—ñ —É—Å—Ç–∞–Ω–æ–≤–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–î–µ—Ä–∂–∞–≤–Ω—ñ—É—Å—Ç–∞–Ω–æ–≤–∏')
    keyb.add(but_1)
    url = 'https://static.ukrinform.com/photos/2019_09/thumb_files/630_360_1567497060-680.jpg'
    await bot.send_photo(chat_id=message.chat.id, photo=url, caption="", reply_markup=keyb)
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")


@dp.message_handler(filters.Text(startswith="–û—Ö–æ—Ä–æ–Ω–∞ –∑–¥–æ—Ä–æ–≤"))
async def foots(message: types.Message, state: FSMContext):
    keyb_oxz = types.InlineKeyboardMarkup()
    but_1 = types.InlineKeyboardButton(text='–ö–ù–ü –¢–ú–† "–¢–µ—Ä–µ–±–æ–≤–ª—è–Ω—Å—å–∫–∞ –º—ñ—Å—å–∫–∞ –ª—ñ–∫–∞—Ä–Ω—è"üè•',
                                       callback_data='–∫–æ–º–∞–Ω–¥–∞_–º—ñ—Å—å–∫–∞–õ—ñ–∫–∞—Ä–Ω—è')
    but_2 = types.InlineKeyboardButton(text='–°—ñ–º–µ–π–Ω–∞ –º–µ–¥–∏—Ü–∏–Ω–∞üë®‚Äçüë©‚Äçüëß‚Äçüë¶', callback_data='–∫–æ–º–∞–Ω–¥–∞_–°—ñ–º–µ–π–Ω–∞–ú–µ–¥–∏—Ü–∏–Ω–∞')
    but_3 = types.InlineKeyboardButton(text='–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä—ñ—èü¶Æ', callback_data='–∫–æ–º–∞–Ω–¥–∞_–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä—ñ—è')
    #   but_4 = types.InlineKeyboardButton(text='–ê–ø—Ç–µ–∫–∏üíä', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ê–ø—Ç–µ–∫–∏')
    but_6 = types.InlineKeyboardButton(text='–õ–∞–±–æ—Ä–∞—Ç–æ—Ä—ñ—óü©∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–õ–∞–±–æ—Ä–∞—Ç–æ—Ä—ñ—ó')
    keyb_oxz.add(but_2).add(but_1).add(but_3).add(but_6)
    url = 'https://orxid.in.ua/TerInfBotPhoto/ox_zd.jpg'
    await bot.send_photo(chat_id=message.chat.id, photo=url, caption="", reply_markup=keyb_oxz)
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")


@dp.message_handler(filters.Text(startswith="–Ü–Ω—à—ñ —É—Å—Ç–∞–Ω–æ–≤–∏"))
async def foots(message: types.Message, state: FSMContext):
    keyb_ii = types.InlineKeyboardMarkup()
    but_1 = types.InlineKeyboardButton(text="–ì—Ä–æ–º–∞–¥—Å—å–∫—ñ –æ–±'—î–¥–Ω–∞–Ω–Ω—è", callback_data='–∫–æ–º–∞–Ω–¥–∞_–ì—Ä–æ–º–∞–¥—Å—å–∫—ñ–û–±—î–¥–Ω–∞–Ω–Ω—è')
    but_2 = types.InlineKeyboardButton(text='–¶–µ—Ä–∫–≤–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–¶–µ—Ä–∫–≤–∏')
    but_3 = types.InlineKeyboardButton(text='–Ü–Ω—à—ñ', callback_data='–∫–æ–º–∞–Ω–¥–∞_–Ü–Ω—à—ñ')

    keyb_ii.add(but_1).add(but_2).add(but_3)
    url = 'https://orxid.in.ua/TerInfBotPhoto/inshiys.jpg'
    await bot.send_photo(chat_id=message.chat.id, photo=url, caption="", reply_markup=keyb_ii)
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")


# @dp.message_handler(filters.Text(startswith="–ñ–∏—Ç–µ–ª—é"))
# async def foots(message: types.Message, state: FSMContext):
#     keyb_ii = types.InlineKeyboardMarkup()
#     but_1 = types.InlineKeyboardButton(text='–ï–∫—Å—Ç—Ä–µ–Ω—ñ —Å–ª—É–∂–±–∏üöí', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ï–∫—Å—Ç—Ä–µ–Ω—ñ–°–ª—É–∂–±–∏')
#     but_2 = types.InlineKeyboardButton(text="–ó–≤'—è–∑–æ–∫ —ñ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç", callback_data='–∫–æ–º–∞–Ω–¥–∞_–ó–≤—è–∑–æ–∫–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç')
#     but_3 = types.InlineKeyboardButton(text='–ö–æ–º—É–Ω–∞–ª—å–Ω—ñ —Å–ª—É–∂–±–∏üöú', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ö–æ–º—É–Ω–∞–ª—å–Ω—ñ–°–ª—É–∂–±–∏')
#     but_4 = types.InlineKeyboardButton(text='–°–æ—Ü—ñ–∞–ª—å–Ω—ñ –ø–æ—Å–ª—É–≥–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–°–æ—Ü—ñ–∞–ª—å–Ω—ñ–ü–æ—Å–ª—É–≥–∏')
#     but_5 = types.InlineKeyboardButton(text='–î–µ—Ä–∂–∞–≤–Ω—ñ —É—Å—Ç–∞–Ω–æ–≤–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–î–µ—Ä–∂–∞–≤–Ω—ñ–£—Å—Ç–∞–Ω–æ–≤–∏')
#     keyb_ii.add(but_1).add(but_2).add(but_3).add(but_4).add(but_5)
#     url = 'https://vmi957205.contaboserver.net/TerInfBotPhoto/%D0%B6%D0%B8%D1%82%D0%B5%D0%BB%D1%8E.jpg'
#     await bot.send_photo(chat_id=message.chat.id, photo=url, caption="", reply_markup=keyb_ii)
#     logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")

@dp.message_handler(filters.Text(startswith="–†—ñ–∑–Ω—ñ —Å–ª—É–∂–±–∏, –ø–æ—Å–ª—É–≥–∏"))
async def foot(message: types.Message, state: FSMContext):
    keyb_ii = types.InlineKeyboardMarkup()
    but_1 = types.InlineKeyboardButton(text='–ï–∫—Å—Ç—Ä–µ–Ω—ñ —Å–ª—É–∂–±–∏üöí', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ï–∫—Å—Ç—Ä–µ–Ω—ñ–°–ª—É–∂–±–∏')
    #but_2 = types.InlineKeyboardButton(text="–ó–≤'—è–∑–æ–∫ —ñ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç", callback_data='–∫–æ–º–∞–Ω–¥–∞_–ó–≤—è–∑–æ–∫–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç')
    but_2 = types.InlineKeyboardButton(text='–ö–æ–º—É–Ω–∞–ª—å–Ω—ñ —Å–ª—É–∂–±–∏üöú', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ö–æ–º—É–Ω–∞–ª—å–Ω—ñ–°–ª—É–∂–±–∏')
    but_3 = types.InlineKeyboardButton(text='–°–æ—Ü—ñ–∞–ª—å–Ω—ñ –ø–æ—Å–ª—É–≥–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–°–æ—Ü—ñ–∞–ª—å–Ω—ñ–ü–æ—Å–ª—É–≥–∏')
   # but_5 = types.InlineKeyboardButton(text='–î–µ—Ä–∂–∞–≤–Ω—ñ —É—Å—Ç–∞–Ω–æ–≤–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–î–µ—Ä–∂–∞–≤–Ω—ñ–£—Å—Ç–∞–Ω–æ–≤–∏')
    keyb_ii.add(but_1).add(but_2).add(but_3)
    url = 'https://orxid.in.ua/TerInfBotPhoto/rizsly.jpg'
    await bot.send_photo(chat_id=message.chat.id, photo=url, caption="", reply_markup=keyb_ii)
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")

@dp.message_handler(filters.Text(startswith="–ó–≤'—è–∑–æ–∫ —ñ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç"))
async def foots(message: types.Message, state: FSMContext):
    keyb_ii = types.InlineKeyboardMarkup()
    but_1 = types.InlineKeyboardButton(text='–í–æ–∫–∑–∞–ª–∏', callback_data='–∫–æ–º–∞–Ω–¥–∞_–í–æ–∫–∑–∞–ª–∏')
    but_2 = types.InlineKeyboardButton(text='–¢–∞–∫—Å—ñ', callback_data='–∫–æ–º–∞–Ω–¥–∞_–¢–∞–∫—Å—ñ')
    but_3 = types.InlineKeyboardButton(text='–î–æ—Å—Ç–∞–≤–∫–∞, –ø–æ—à—Ç–æ–≤—ñ –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è', callback_data='–∫–æ–º–∞–Ω–¥–∞_–î–æ—Å—Ç–∞–≤–∫–∞–ñ–∏—Ç–µ–ª—é')
    but_4 = types.InlineKeyboardButton(text='–ì—Ä–∞—Ñ—ñ–∫ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç—É', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ì—Ä–∞—Ñ—ñ–∫–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç—É')
    keyb_ii.add(but_1).add(but_2).add(but_3).add(but_4)
    url = 'https://nday.te.ua/wp-content/uploads/2018/11/46125873_1014320568769803_7150793194022633472_o.jpg'
    await bot.send_photo(chat_id=message.chat.id, photo=url, caption="", reply_markup=keyb_ii)
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")

@dp.message_handler(filters.Text(startswith="–ö–æ–º—É–Ω–∞–ª–∫–∞"))
async def foots(message: types.Message, state: FSMContext):
    keyb_ii = types.InlineKeyboardMarkup()
    but_1 = types.InlineKeyboardButton(text='–°–≤—ñ—Ç–ª–æüí°', callback_data='–∫–æ–º–∞–Ω–¥–∞_–°–≤—ñ—Ç–ª–æ')
    but_2 = types.InlineKeyboardButton(text='–ì–∞–∑', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ì–∞–∑')
    but_3 = types.InlineKeyboardButton(text='–í–æ–¥–∞üí¶', callback_data='–∫–æ–º–∞–Ω–¥–∞_–í–æ–¥–∞')
    but_4 = types.InlineKeyboardButton(text='–°–º—ñ—Ç—Ç—è', callback_data='–∫–æ–º–∞–Ω–¥–∞_–°–º—ñ—Ç—Ç—è')
    keyb_ii.add(but_1).add(but_2).add(but_3).add(but_4)
    url = 'https://protocol.ua/img/news/55e31cf7fcea3943e159537e9faea609.jpg'
    await bot.send_photo(chat_id=message.chat.id, photo=url, caption="", reply_markup=keyb_ii)
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")

@dp.message_handler(filters.Text(startswith="–ó–∞–ø–∏—Å –¥–æ –ª—ñ–∫–∞—Ä—è"))
async def foots(message: types.Message, state: FSMContext):
    keyb_ii = types.InlineKeyboardMarkup()
    but_1 = types.InlineKeyboardButton(text='–ó–∞–ø–∏—Å –¥–æ —Å—ñ–º–µ–π–Ω–æ–≥–æ –ª—ñ–∫–∞—Ä—è', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ó–∞–ø–∏—Å–°—ñ–º–µ–π–Ω—ñ')
    but_2 = types.InlineKeyboardButton(text='–ó–∞–ø–∏—Å –¥–æ –ª—ñ–∫–∞—Ä—è —É –ª—ñ–∫–∞—Ä–Ω—ñ', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ó–∞–ø–∏—Å–õ—ñ–∫–∞—Ä–Ω—è')
    keyb_ii.add(but_1).add(but_2)
    url = 'https://malyn-rada.gov.ua/sites/default/files/styles/social/public/catalog/66.jpg?itok=fDcBkgw0'
    await bot.send_photo(chat_id=message.chat.id, photo=url, caption="", reply_markup=keyb_ii)
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")

@dp.message_handler(filters.Text(startswith="–ó–≤–µ—Ä–Ω–µ–Ω–Ω—è, –Ω–æ–≤–∏–Ω–∏"))
async def foots(message: types.Message, state: FSMContext):
    keyb_ii = types.InlineKeyboardMarkup()
    but_1 = types.InlineKeyboardButton(text='–ü–æ–¥–∞—Ç–∏ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è —É –º—ñ—Å—å–∫—É —Ä–∞–¥—É', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ó–≤–µ—Ä–µ–Ω–Ω—è–ú–†')
    but_2 = types.InlineKeyboardButton(text='–ü–æ–¥–∞—Ç–∏ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è —É –ö–ü ‚Äú–¢–µ—Ä–µ–±–æ–≤–ª—è', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ó–≤–µ—Ä–Ω–µ–Ω–Ω—è–ö–ü')
    but_3 = types.InlineKeyboardButton(text='–ü–æ–¥–∞—Ç–∏ –ù–û–í–ò–ù–£', callback_data='–∫–æ–º–∞–Ω–¥–∞_–ü–æ–¥–∞—Ç–∏–ù–æ–≤–∏–Ω—É')
    keyb_ii.add(but_1).add(but_2).add(but_3)
    url = 'https://cv.tax.gov.ua/data/material/000/387/487662/photo.png'
    await bot.send_photo(chat_id=message.chat.id, photo=url, caption="", reply_markup=keyb_ii)
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")



@dp.message_handler(filters.Text(startswith="‚¨ÖÔ∏è –ù–∞ –≥–æ–ª–æ–≤–Ω—É"))
async def foots(message: types.Message, state: FSMContext):
    await message.answer("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", reply_markup=keyb_main)
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")


@dp.message_handler(filters.Text(startswith="–ü—ñ–¥–ø—Ä–∏—î–º—Å—Ç–≤–∞"))
async def foots(message: types.Message, state: FSMContext):
    await message.answer("–î–∞–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ")
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")

@dp.message_handler(filters.Text(startswith="–ü–æ—à—É–∫"))
async def foots(message: types.Message, state: FSMContext):
    await message.answer("–í–≤–µ–¥—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, —É —Ä—è–¥–æ–∫ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è üëá –∫–ª—é—á–æ–≤–µ —Å–ª–æ–≤–æ –ø–æ—à—É–∫—É, –Ω–∞–ø—Ä: —à–∫–æ–ª–∞, –∞—Ç–µ–ª—å—î, —Ä–µ–º–æ–Ω—Ç —Ç–æ—â–æ")
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É -{message.text}")


@dp.message_handler(filters.Text(startswith="–í—ñ–π—Å—å–∫–æ–≤–∏–º"))
async def foots(message: types.Message, state: FSMContext):
    await message.answer("–î–∞–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ")


@dp.message_handler()
async def foots(message: types.Message, state: FSMContext):
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {message.from_user.first_name} –Ω–∞–ø–∏—Å–∞–≤ -{message.text}")
    if message.text == "–§–∞–π–ª12" and message.from_user.id in conf.ADMIN_IDS:
        doc = open('debug.txt', 'rb')
        await message.reply_document(doc)

    elif message.text == "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞":
        URL = "https://orxid.in.ua/InfoBot/ep/statistics/"
        resp = requests.get(URL).json()
        await message.answer(f"–õ–æ–∫–∞—Ü—ñ–πüè° –≤ –±–æ—Ç—ñ - {resp[1]}, –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –±–æ—Ç—Éüôã - {resp[0]}")

    elif message.text.startswith("broadcast#") and message.from_user.id in conf.ADMIN_IDS:
        req = requests.get('https://orxid.in.ua/InfoBot/ep/allid/').json()

        # for x in range(17, 499):
        #     item = req[x]
        #     await bot.send_message(chat_id=item['userTelegramID'], text="–£—Ä–∞! –ù–∞—Å —É–∂–µ 500üôã! –Ü 270 –ª–æ–∫–∞—Ü—ñ–πüè°! –ó–∞–ø—Ä–æ—à—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–π –±—ñ–∑–Ω–µ—Å –æ—Ç—Ä–∏–º–∞—Ç–∏ –º—ñ—Å—Ü–µ —É –±–æ—Ç—ñ! –¢–∏—Å–Ω–∏: –•–æ—á–µ—à –±—É—Ç–∏ —Ç—É—Ç?, –∑–∞–ø–æ–≤–Ω—é–π —Ñ–æ—Ä–º—É —Ç–∞  –æ—Ç—Ä–∏–º—É–π –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –∑–∞–ª—É—á–∏—Ç–∏ –±—ñ–ª—å—à–µ –∫–ª—ñ—î–Ω—Ç—ñ–≤! ")
        #     logger.info(f"–û–ø–æ–≤—ñ—â–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {item['userTelegramID']} ")
        userLi = []

        for i in req:
            userLi.append(i['userTelegramID'])
        text = message.text.split("#")[1]
        message.text = text
       # message.text = "–£—Ä–∞! –ù–∞—Å —É–∂–µ –±—ñ–ª—å—à–µ 500üôã! –¢–∞ –º–∞–π–∂–µ 300 –ª–æ–∫–∞—Ü—ñ–πüè°! –ó–∞–ø—Ä–æ—à—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–π –±—ñ–∑–Ω–µ—Å –æ—Ç—Ä–∏–º–∞—Ç–∏ –º—ñ—Å—Ü–µ —É –±–æ—Ç—ñ! –¢–∏—Å–Ω–∏: –•–æ—á–µ—à –±—É—Ç–∏ —Ç—É—Ç?, –∑–∞–ø–æ–≤–Ω—é–π —Ñ–æ—Ä–º—É —Ç–∞  –æ—Ç—Ä–∏–º—É–π –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –∑–∞–ª—É—á–∏—Ç–∏ –±—ñ–ª—å—à–µ –∫–ª—ñ—î–Ω—Ç—ñ–≤! "
        await MessageBroadcaster(chats=userLi, message=message, reply_markup=keyb_main).run()  # Run the broadcaster
        logger.info(f"–ù–∞–¥—ñ—Å–ª–∞–Ω–æ broadcast (–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—Å—ñ–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º) - {message.text}")

    else:
        URL = "https://orxid.in.ua/InfoBot/ep/fhesh/"
        resp = requests.get(URL, params={'hash': message.text})

        if len(resp.text) > 2 and resp.status_code == requests.codes.ok:
            async with state.proxy() as data:
                data['main_list'] = resp.json()
                data['listindex'] = 0

            main_list = data['main_list']
            i = main_list[0]
            # res = f"–ù–∞–∑–≤–∞: {i['Name']}\n–û–ø–∏—Å: {i['About']}\n–ê–¥—Ä–µ—Å–∞: {i['address']}\n\n–¢–µ–ª.: {i['tel']}\n–ì—Ä–∞—Ñ—ñ–∫: {i['work_schedule']}\n–°–∞–π—Ç:{i['SiteURL']}\n                    1 —ñ–∑ {len(main_list)}\n"
            res = f"{getstring(i)}\n1 —ñ–∑ {len(main_list)}\n"
            try:
                await bot.send_photo(chat_id=message.chat.id, photo=i['PhotoURL'], caption=res,
                                     reply_markup=keyboard_prev_next)
            # await bot.send_message(chat_id=query.message.chat.id,text=res, reply_markup=keyboard_prev_next,parse_mode="HTML")
            except:
                print("aiogram.utils.exceptions.BadRequest: Wrong type of the web page content")
                await bot.send_message(chat_id=message.chat.id,
                                       text="–ø–æ–º–∏–ª–∫–∞ - aiogram.utils.exceptions.BadRequest", reply_markup=keyb_main)

        else:
            await bot.send_message(chat_id=message.chat.id, text="–ù–∞–∂–∞–ª—å —Ü—ñ –¥–∞–Ω—ñ –≤—ñ–¥—Å—É—Ç–Ω—ñ, –±–æ—Ç —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ üîß",
                                   reply_markup=keyb_main)
    # else:
    #     await message.answer("–ù–∞–∂–∞–ª—å —Ü—ñ –¥–∞–Ω—ñ –≤—ñ–¥—Å—É—Ç–Ω—ñ, –±–æ—Ç —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ üîß",reply_markup=keyb_main)


# ---------------------------------------------------------------------------------

@dp.callback_query_handler(lambda c: c.data == 'next')
async def change_image_callback(query: types.CallbackQuery, state: FSMContext):
    async with state.proxy() as data:
        data['tmp'] = ""

    try:
        main_list = data['main_list']
        listindex = data['listindex']
    except:
        logger.debug(f"KeyErr in next listindex - {listindex} mainlist -{main_list}")

    if len(main_list) > 1:
        listindex = listindex + 1
        if listindex == len(main_list):
            listindex = 0

        try:
            i = main_list[listindex]
            # res = f"–ù–∞–∑–≤–∞: {i['Name']}\n–û–ø–∏—Å: {i['About']}\n–ê–¥—Ä–µ—Å–∞: {i['address']}\n–¢–µ–ª.: {i['tel']}\n–ì—Ä–∞—Ñ—ñ–∫: {i['work_schedule']}\n–°–∞–π—Ç:{i['SiteURL']}\n{listindex+1} —ñ–∑ {len(main_list)}\n"
            res = f"{getstring(i)}{listindex + 1} —ñ–∑ {len(main_list)}\n"
            await bot.edit_message_media(chat_id=query.message.chat.id, message_id=query.message.message_id,
                                         media=types.InputMediaPhoto(media=i['PhotoURL'], caption=res),
                                         reply_markup=keyboard_prev_next)
            async with state.proxy() as data:
                data['listindex'] = listindex
        except IndexError:
            async with state.proxy() as data:
                data['listindex'] = 0
            print(f"IndexError listindex - {listindex}")
            logger.debug(f"IndexError listindex in next- {listindex} mainlist -{main_list}")
    #     except UnboundLocalError:
    #         print(f"UnboundLocalError - {listindex}")
    #         logger.debug(f"UnboundLocalError –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {query.from_user.first_name} listindex in next- {listindex}")
    # logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {query.from_user.first_name} –ø–µ—Ä–µ–π—à–æ–≤ –¥–∞–ª—ñ –Ω–∞ –∫–æ–º–ø–∞–Ω—ñ—é -{i['Name']}")


@dp.callback_query_handler(lambda c: c.data == 'prev')
async def change_image_callback(query: types.CallbackQuery, state: FSMContext):
    async with state.proxy() as data:
        data['tmp'] = ""

    try:
        main_list = data['main_list']
        listindex = data['listindex']
    except:
        logger.debug(f"KeyErr in prev listindex - {listindex} mainlist -{main_list}")

    if len(main_list) > 1:
        listindex = listindex - 1
        if listindex == -1:
            listindex = len(main_list) - 1

        try:
            i = main_list[listindex]
            # res = f"–ù–∞–∑–≤–∞: {i['Name']}\n–û–ø–∏—Å: {i['About']}\n–ê–¥—Ä–µ—Å–∞: {i['address']}\n–¢–µ–ª.: {i['tel']}\n–ì—Ä–∞—Ñ—ñ–∫: {i['work_schedule']}\n–°–∞–π—Ç:{i['SiteURL']}\n                    {listindex+1} —ñ–∑ {len(main_list)}\n"
            res = f"{getstring(i)}{listindex + 1} —ñ–∑ {len(main_list)}\n"

            await bot.edit_message_media(chat_id=query.message.chat.id, message_id=query.message.message_id,
                                         media=types.InputMediaPhoto(media=i['PhotoURL'], caption=res),
                                         reply_markup=keyboard_prev_next)
            async with state.proxy() as data:
                data['listindex'] = listindex
        except IndexError:
            async with state.proxy() as data:
                data['listindex'] = 0
            print(f"IndexError listindex - {listindex}")
            logger.debug(f"IndexError listindex in prev - {listindex} mainlist -{main_list}")

    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {query.from_user.first_name} –ø–æ–≤–µ—Ä–Ω—É–≤—Å—è –Ω–∞–∑–∞–¥ –Ω–∞ –∫–æ–º–ø–∞–Ω—ñ—é -{i['Name']}")


@dp.callback_query_handler(lambda c: c.data == 'about')
async def change_image_callback(query: types.CallbackQuery, state: FSMContext):
    global main_list, listindex
    i = main_list[listindex]
    res = f"–ù–∞–∑–≤–∞: {i['Name']}\n–ö–∞—Ç–µ–≥–æ—Ä—ñ—è: {i['category']}\n–ê–¥—Ä–µ—Å–∞: {i['address']}\n–¢–µ–ª.: {i['tel']}\n–ì—Ä–∞—Ñ—ñ–∫: {i['work_schedule']}\n–°–∞–π—Ç:{i['SiteURL']}\n               {listindex + 1} —ñ–∑ {len(main_list)}\n"
    await bot.edit_message_media(chat_id=query.message.chat.id, message_id=query.message.message_id,
                                 media=types.InputMediaPhoto(media=i['PhotoURL'], caption=res),
                                 reply_markup=keyboard_prev_next)


# -----------------------------------------------------------------------
@dp.callback_query_handler()
async def change_image_callback(query: types.CallbackQuery, state: FSMContext):
    category = query.data.split("_")[1]  # –±–µ—Ä–µ–º —Å—Ç—Ä—ñ—á–∫—É —Ç–∏–ø—É "–∫–æ–º–∞–Ω–¥–∞_–∫–ª—ñ–Ω—ñ–∫–∏" —Ç–∞ –≤–∏—Ç—è–≥—É—î–º–æ —ñ–∑ –Ω–µ—ó –∫–ª—ñ–Ω—ñ–∫–∏
    print(category)
    URL = "https://orxid.in.ua/InfoBot/ep/"
    resp = requests.get(URL, params={'category': category})
    print(resp.text)
    if len(resp.text) > 2 and resp.status_code == requests.codes.ok:
        async with state.proxy() as data:
            data['main_list'] = resp.json()
            data['listindex'] = 0

        try:
            main_list = data['main_list']
            i = main_list[0]
            # res = f"–ù–∞–∑–≤–∞: {i['Name']}\n–û–ø–∏—Å: {i['About']}\n–ê–¥—Ä–µ—Å–∞: {i['address']}\n\n–¢–µ–ª.: {i['tel']}\n–ì—Ä–∞—Ñ—ñ–∫: {i['work_schedule']}\n–°–∞–π—Ç:{i['SiteURL']}\n                    1 —ñ–∑ {len(main_list)}\n"
            res = f"{getstring(i)}\n1 —ñ–∑ {len(main_list)}\n"
        except:
            logger.debug(f"–ø–æ–º–∏–ª–∫–∞ –≤  main_list = data['main_list'] i = main_list[0]")

        try:
            await bot.send_photo(chat_id=query.message.chat.id, photo=i['PhotoURL'], caption=res,
                                 reply_markup=keyboard_prev_next)
            # await bot.send_message(chat_id=query.message.chat.id,text=res, reply_markup=keyboard_prev_next,parse_mode="HTML")
            logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á - {query.from_user.first_name} –ø–µ—Ä–µ–≥–ª—è–Ω—É–≤ –∫–æ–º–ø–∞–Ω—ñ—é -{i['Name']}")
        except:
            logger.debug(f"–ø–æ–º–∏–ª–∫–∞ –≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ - {query.from_user.first_name} –ø—Ä–∏ –ø–µ—Ä–µ–≥–ª—è–¥—ñ –∫–æ–º–ø–∞–Ω—ñ—ó -{i['Name']}")


    else:
        await bot.send_message(chat_id=query.message.chat.id, text="–ù–∞–∂–∞–ª—å —Ü—ñ –¥–∞–Ω—ñ –≤—ñ–¥—Å—É—Ç–Ω—ñ, –±–æ—Ç —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ üîß",
                               reply_markup=keyb_main)


##-------------------–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞-------------------------##
if TEST_MODE:
    print("Bot running")
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ –≤ start_polling")
    # dp.middleware.setup(MidlWare())
    executor.start_polling(dp, skip_updates=True)
else:
    async def on_startup(dp):
        await bot.set_webhook(WEBHOOK_URL)
        logger.debug("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞")


    async def on_shutdown(dp):
        logger.debug('–ó—É–ø–∏–Ω–∫–∞ –±–æ—Ç–∞')
        await bot.delete_webhook()
        await dp.storage.close()
        await dp.storage.wait_closed()


    if __name__ == '__main__':
        # dp.middleware.setup(MidlWare())
        start_webhook(
            dispatcher=dp,
            webhook_path=WEBHOOK_PATH,
            on_startup=on_startup,
            on_shutdown=on_shutdown,
            skip_updates=True,
            host=WEBAPP_HOST,
            port=WEBAPP_PORT,
        )
